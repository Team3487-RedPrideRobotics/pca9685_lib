(function() {var implementors = {};
implementors["async_std"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"async_std/task/struct.Builder.html\" title=\"struct async_std::task::Builder\">Builder</a>","synthetic":true,"types":["async_std::task::builder::Builder"]},{"text":"impl Freeze for <a class=\"struct\" href=\"async_std/task/struct.Task.html\" title=\"struct async_std::task::Task\">Task</a>","synthetic":true,"types":["async_std::task::task::Task"]},{"text":"impl Freeze for <a class=\"struct\" href=\"async_std/task/struct.TaskId.html\" title=\"struct async_std::task::TaskId\">TaskId</a>","synthetic":true,"types":["async_std::task::task_id::TaskId"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"async_std/task/struct.JoinHandle.html\" title=\"struct async_std::task::JoinHandle\">JoinHandle</a>&lt;T&gt;","synthetic":true,"types":["async_std::task::join_handle::JoinHandle"]},{"text":"impl Freeze for <a class=\"struct\" href=\"async_std/task/struct.AccessError.html\" title=\"struct async_std::task::AccessError\">AccessError</a>","synthetic":true,"types":["async_std::task::task_local::AccessError"]},{"text":"impl&lt;T&gt; !Freeze for <a class=\"struct\" href=\"async_std/task/struct.LocalKey.html\" title=\"struct async_std::task::LocalKey\">LocalKey</a>&lt;T&gt;","synthetic":true,"types":["async_std::task::task_local::LocalKey"]},{"text":"impl Freeze for <a class=\"struct\" href=\"async_std/future/struct.TimeoutError.html\" title=\"struct async_std::future::TimeoutError\">TimeoutError</a>","synthetic":true,"types":["async_std::future::timeout::TimeoutError"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"async_std/stream/struct.Empty.html\" title=\"struct async_std::stream::Empty\">Empty</a>&lt;T&gt;","synthetic":true,"types":["async_std::stream::empty::Empty"]},{"text":"impl&lt;F&gt; Freeze for <a class=\"struct\" href=\"async_std/stream/struct.FromFn.html\" title=\"struct async_std::stream::FromFn\">FromFn</a>&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>","synthetic":true,"types":["async_std::stream::from_fn::FromFn"]},{"text":"impl&lt;I&gt; Freeze for <a class=\"struct\" href=\"async_std/stream/struct.FromIter.html\" title=\"struct async_std::stream::FromIter\">FromIter</a>&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":["async_std::stream::from_iter::FromIter"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"async_std/stream/struct.Once.html\" title=\"struct async_std::stream::Once\">Once</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["async_std::stream::once::Once"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"async_std/stream/struct.Repeat.html\" title=\"struct async_std::stream::Repeat\">Repeat</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["async_std::stream::repeat::Repeat"]},{"text":"impl&lt;F&gt; Freeze for <a class=\"struct\" href=\"async_std/stream/struct.RepeatWith.html\" title=\"struct async_std::stream::RepeatWith\">RepeatWith</a>&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>","synthetic":true,"types":["async_std::stream::repeat_with::RepeatWith"]},{"text":"impl&lt;S, U&gt; Freeze for <a class=\"struct\" href=\"async_std/stream/struct.Chain.html\" title=\"struct async_std::stream::Chain\">Chain</a>&lt;S, U&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;U: Freeze,&nbsp;</span>","synthetic":true,"types":["async_std::stream::stream::chain::Chain"]},{"text":"impl&lt;S&gt; Freeze for <a class=\"struct\" href=\"async_std/stream/struct.Cloned.html\" title=\"struct async_std::stream::Cloned\">Cloned</a>&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":["async_std::stream::stream::cloned::Cloned"]},{"text":"impl&lt;S&gt; Freeze for <a class=\"struct\" href=\"async_std/stream/struct.Copied.html\" title=\"struct async_std::stream::Copied\">Copied</a>&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":["async_std::stream::stream::copied::Copied"]},{"text":"impl&lt;S, P&gt; Freeze for <a class=\"struct\" href=\"async_std/stream/struct.Filter.html\" title=\"struct async_std::stream::Filter\">Filter</a>&lt;S, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":["async_std::stream::stream::filter::Filter"]},{"text":"impl&lt;S&gt; Freeze for <a class=\"struct\" href=\"async_std/stream/struct.Fuse.html\" title=\"struct async_std::stream::Fuse\">Fuse</a>&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":["async_std::stream::stream::fuse::Fuse"]},{"text":"impl&lt;S, F&gt; Freeze for <a class=\"struct\" href=\"async_std/stream/struct.Inspect.html\" title=\"struct async_std::stream::Inspect\">Inspect</a>&lt;S, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":["async_std::stream::stream::inspect::Inspect"]},{"text":"impl&lt;S, F&gt; Freeze for <a class=\"struct\" href=\"async_std/stream/struct.Map.html\" title=\"struct async_std::stream::Map\">Map</a>&lt;S, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":["async_std::stream::stream::map::Map"]},{"text":"impl&lt;S, St, F&gt; Freeze for <a class=\"struct\" href=\"async_std/stream/struct.Scan.html\" title=\"struct async_std::stream::Scan\">Scan</a>&lt;S, St, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,&nbsp;</span>","synthetic":true,"types":["async_std::stream::stream::scan::Scan"]},{"text":"impl&lt;S&gt; Freeze for <a class=\"struct\" href=\"async_std/stream/struct.Skip.html\" title=\"struct async_std::stream::Skip\">Skip</a>&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":["async_std::stream::stream::skip::Skip"]},{"text":"impl&lt;S, P&gt; Freeze for <a class=\"struct\" href=\"async_std/stream/struct.SkipWhile.html\" title=\"struct async_std::stream::SkipWhile\">SkipWhile</a>&lt;S, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":["async_std::stream::stream::skip_while::SkipWhile"]},{"text":"impl&lt;S&gt; Freeze for <a class=\"struct\" href=\"async_std/stream/struct.StepBy.html\" title=\"struct async_std::stream::StepBy\">StepBy</a>&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":["async_std::stream::stream::step_by::StepBy"]},{"text":"impl&lt;S&gt; Freeze for <a class=\"struct\" href=\"async_std/stream/struct.Take.html\" title=\"struct async_std::stream::Take\">Take</a>&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":["async_std::stream::stream::take::Take"]},{"text":"impl&lt;S, P&gt; Freeze for <a class=\"struct\" href=\"async_std/stream/struct.TakeWhile.html\" title=\"struct async_std::stream::TakeWhile\">TakeWhile</a>&lt;S, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":["async_std::stream::stream::take_while::TakeWhile"]},{"text":"impl&lt;A, B&gt; Freeze for <a class=\"struct\" href=\"async_std/stream/struct.Zip.html\" title=\"struct async_std::stream::Zip\">Zip</a>&lt;A, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A as <a class=\"trait\" href=\"async_std/stream/trait.Stream.html\" title=\"trait async_std::stream::Stream\">Stream</a>&gt;::<a class=\"type\" href=\"async_std/stream/trait.Stream.html#associatedtype.Item\" title=\"type async_std::stream::Stream::Item\">Item</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["async_std::stream::stream::zip::Zip"]},{"text":"impl&lt;R&gt; Freeze for <a class=\"struct\" href=\"async_std/io/struct.Lines.html\" title=\"struct async_std::io::Lines\">Lines</a>&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["async_std::io::buf_read::lines::Lines"]},{"text":"impl&lt;R&gt; Freeze for <a class=\"struct\" href=\"async_std/io/struct.Split.html\" title=\"struct async_std::io::Split\">Split</a>&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["async_std::io::buf_read::split::Split"]},{"text":"impl&lt;R&gt; Freeze for <a class=\"struct\" href=\"async_std/io/struct.BufReader.html\" title=\"struct async_std::io::BufReader\">BufReader</a>&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["async_std::io::buf_reader::BufReader"]},{"text":"impl&lt;W&gt; Freeze for <a class=\"struct\" href=\"async_std/io/struct.BufWriter.html\" title=\"struct async_std::io::BufWriter\">BufWriter</a>&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Freeze,&nbsp;</span>","synthetic":true,"types":["async_std::io::buf_writer::BufWriter"]},{"text":"impl&lt;W&gt; Freeze for <a class=\"struct\" href=\"async_std/io/struct.IntoInnerError.html\" title=\"struct async_std::io::IntoInnerError\">IntoInnerError</a>&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Freeze,&nbsp;</span>","synthetic":true,"types":["async_std::io::buf_writer::IntoInnerError"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"async_std/io/struct.Cursor.html\" title=\"struct async_std::io::Cursor\">Cursor</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["async_std::io::cursor::Cursor"]},{"text":"impl Freeze for <a class=\"struct\" href=\"async_std/io/struct.Empty.html\" title=\"struct async_std::io::Empty\">Empty</a>","synthetic":true,"types":["async_std::io::empty::Empty"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"async_std/io/struct.Bytes.html\" title=\"struct async_std::io::Bytes\">Bytes</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["async_std::io::read::bytes::Bytes"]},{"text":"impl&lt;T, U&gt; Freeze for <a class=\"struct\" href=\"async_std/io/struct.Chain.html\" title=\"struct async_std::io::Chain\">Chain</a>&lt;T, U&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;U: Freeze,&nbsp;</span>","synthetic":true,"types":["async_std::io::read::chain::Chain"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"async_std/io/struct.Take.html\" title=\"struct async_std::io::Take\">Take</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["async_std::io::read::take::Take"]},{"text":"impl Freeze for <a class=\"struct\" href=\"async_std/io/struct.Repeat.html\" title=\"struct async_std::io::Repeat\">Repeat</a>","synthetic":true,"types":["async_std::io::repeat::Repeat"]},{"text":"impl Freeze for <a class=\"struct\" href=\"async_std/io/struct.Sink.html\" title=\"struct async_std::io::Sink\">Sink</a>","synthetic":true,"types":["async_std::io::sink::Sink"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"async_std/io/struct.Stderr.html\" title=\"struct async_std::io::Stderr\">Stderr</a>","synthetic":true,"types":["async_std::io::stderr::Stderr"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"async_std/io/struct.Stdin.html\" title=\"struct async_std::io::Stdin\">Stdin</a>","synthetic":true,"types":["async_std::io::stdin::Stdin"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"async_std/io/struct.Stdout.html\" title=\"struct async_std::io::Stdout\">Stdout</a>","synthetic":true,"types":["async_std::io::stdout::Stdout"]},{"text":"impl Freeze for <a class=\"struct\" href=\"async_std/os/unix/net/struct.UnixDatagram.html\" title=\"struct async_std::os::unix::net::UnixDatagram\">UnixDatagram</a>","synthetic":true,"types":["async_std::os::unix::net::datagram::UnixDatagram"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"async_std/os/unix/net/struct.Incoming.html\" title=\"struct async_std::os::unix::net::Incoming\">Incoming</a>&lt;'a&gt;","synthetic":true,"types":["async_std::os::unix::net::listener::Incoming"]},{"text":"impl Freeze for <a class=\"struct\" href=\"async_std/os/unix/net/struct.UnixListener.html\" title=\"struct async_std::os::unix::net::UnixListener\">UnixListener</a>","synthetic":true,"types":["async_std::os::unix::net::listener::UnixListener"]},{"text":"impl Freeze for <a class=\"struct\" href=\"async_std/os/unix/net/struct.UnixStream.html\" title=\"struct async_std::os::unix::net::UnixStream\">UnixStream</a>","synthetic":true,"types":["async_std::os::unix::net::stream::UnixStream"]},{"text":"impl&lt;T&gt; !Freeze for <a class=\"struct\" href=\"async_std/sync/struct.Mutex.html\" title=\"struct async_std::sync::Mutex\">Mutex</a>&lt;T&gt;","synthetic":true,"types":["async_std::sync::mutex::Mutex"]},{"text":"impl&lt;'a, T:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"async_std/sync/struct.MutexGuard.html\" title=\"struct async_std::sync::MutexGuard\">MutexGuard</a>&lt;'a, T&gt;","synthetic":true,"types":["async_std::sync::mutex::MutexGuard"]},{"text":"impl&lt;T&gt; !Freeze for <a class=\"struct\" href=\"async_std/sync/struct.RwLock.html\" title=\"struct async_std::sync::RwLock\">RwLock</a>&lt;T&gt;","synthetic":true,"types":["async_std::sync::rwlock::RwLock"]},{"text":"impl&lt;'a, T:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"async_std/sync/struct.RwLockReadGuard.html\" title=\"struct async_std::sync::RwLockReadGuard\">RwLockReadGuard</a>&lt;'a, T&gt;","synthetic":true,"types":["async_std::sync::rwlock::RwLockReadGuard"]},{"text":"impl&lt;'a, T:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"async_std/sync/struct.RwLockWriteGuard.html\" title=\"struct async_std::sync::RwLockWriteGuard\">RwLockWriteGuard</a>&lt;'a, T&gt;","synthetic":true,"types":["async_std::sync::rwlock::RwLockWriteGuard"]},{"text":"impl Freeze for <a class=\"struct\" href=\"async_std/fs/struct.DirBuilder.html\" title=\"struct async_std::fs::DirBuilder\">DirBuilder</a>","synthetic":true,"types":["async_std::fs::dir_builder::DirBuilder"]},{"text":"impl Freeze for <a class=\"struct\" href=\"async_std/fs/struct.DirEntry.html\" title=\"struct async_std::fs::DirEntry\">DirEntry</a>","synthetic":true,"types":["async_std::fs::dir_entry::DirEntry"]},{"text":"impl Freeze for <a class=\"struct\" href=\"async_std/fs/struct.File.html\" title=\"struct async_std::fs::File\">File</a>","synthetic":true,"types":["async_std::fs::file::File"]},{"text":"impl Freeze for <a class=\"struct\" href=\"async_std/fs/struct.OpenOptions.html\" title=\"struct async_std::fs::OpenOptions\">OpenOptions</a>","synthetic":true,"types":["async_std::fs::open_options::OpenOptions"]},{"text":"impl Freeze for <a class=\"struct\" href=\"async_std/fs/struct.ReadDir.html\" title=\"struct async_std::fs::ReadDir\">ReadDir</a>","synthetic":true,"types":["async_std::fs::read_dir::ReadDir"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"async_std/path/struct.Ancestors.html\" title=\"struct async_std::path::Ancestors\">Ancestors</a>&lt;'a&gt;","synthetic":true,"types":["async_std::path::ancestors::Ancestors"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"async_std/path/struct.Components.html\" title=\"struct async_std::path::Components\">Components</a>&lt;'a&gt;","synthetic":true,"types":["async_std::path::components::Components"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"async_std/path/struct.Iter.html\" title=\"struct async_std::path::Iter\">Iter</a>&lt;'a&gt;","synthetic":true,"types":["async_std::path::iter::Iter"]},{"text":"impl Freeze for <a class=\"struct\" href=\"async_std/path/struct.Path.html\" title=\"struct async_std::path::Path\">Path</a>","synthetic":true,"types":["async_std::path::path::Path"]},{"text":"impl Freeze for <a class=\"struct\" href=\"async_std/path/struct.PathBuf.html\" title=\"struct async_std::path::PathBuf\">PathBuf</a>","synthetic":true,"types":["async_std::path::pathbuf::PathBuf"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"async_std/net/struct.Incoming.html\" title=\"struct async_std::net::Incoming\">Incoming</a>&lt;'a&gt;","synthetic":true,"types":["async_std::net::tcp::listener::Incoming"]},{"text":"impl Freeze for <a class=\"struct\" href=\"async_std/net/struct.TcpListener.html\" title=\"struct async_std::net::TcpListener\">TcpListener</a>","synthetic":true,"types":["async_std::net::tcp::listener::TcpListener"]},{"text":"impl Freeze for <a class=\"struct\" href=\"async_std/net/struct.TcpStream.html\" title=\"struct async_std::net::TcpStream\">TcpStream</a>","synthetic":true,"types":["async_std::net::tcp::stream::TcpStream"]},{"text":"impl Freeze for <a class=\"struct\" href=\"async_std/net/struct.UdpSocket.html\" title=\"struct async_std::net::UdpSocket\">UdpSocket</a>","synthetic":true,"types":["async_std::net::udp::UdpSocket"]}];
implementors["async_task"] = [{"text":"impl&lt;R, T&gt; Freeze for <a class=\"struct\" href=\"async_task/struct.JoinHandle.html\" title=\"struct async_task::JoinHandle\">JoinHandle</a>&lt;R, T&gt;","synthetic":true,"types":["async_task::join_handle::JoinHandle"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"async_task/struct.Task.html\" title=\"struct async_task::Task\">Task</a>&lt;T&gt;","synthetic":true,"types":["async_task::task::Task"]}];
implementors["crossbeam_deque"] = [{"text":"impl&lt;T&gt; !Freeze for <a class=\"struct\" href=\"crossbeam_deque/struct.Worker.html\" title=\"struct crossbeam_deque::Worker\">Worker</a>&lt;T&gt;","synthetic":true,"types":["crossbeam_deque::Worker"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"crossbeam_deque/struct.Stealer.html\" title=\"struct crossbeam_deque::Stealer\">Stealer</a>&lt;T&gt;","synthetic":true,"types":["crossbeam_deque::Stealer"]},{"text":"impl&lt;T&gt; !Freeze for <a class=\"struct\" href=\"crossbeam_deque/struct.Injector.html\" title=\"struct crossbeam_deque::Injector\">Injector</a>&lt;T&gt;","synthetic":true,"types":["crossbeam_deque::Injector"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"enum\" href=\"crossbeam_deque/enum.Steal.html\" title=\"enum crossbeam_deque::Steal\">Steal</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["crossbeam_deque::Steal"]}];
implementors["crossbeam_epoch"] = [{"text":"impl&lt;T&gt; !Freeze for <a class=\"struct\" href=\"crossbeam_epoch/struct.Atomic.html\" title=\"struct crossbeam_epoch::Atomic\">Atomic</a>&lt;T&gt;","synthetic":true,"types":["crossbeam_epoch::atomic::Atomic"]},{"text":"impl&lt;'g, T, P&gt; Freeze for <a class=\"struct\" href=\"crossbeam_epoch/struct.CompareAndSetError.html\" title=\"struct crossbeam_epoch::CompareAndSetError\">CompareAndSetError</a>&lt;'g, T, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Freeze,&nbsp;</span>","synthetic":true,"types":["crossbeam_epoch::atomic::CompareAndSetError"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"crossbeam_epoch/struct.Owned.html\" title=\"struct crossbeam_epoch::Owned\">Owned</a>&lt;T&gt;","synthetic":true,"types":["crossbeam_epoch::atomic::Owned"]},{"text":"impl&lt;'g, T&gt; Freeze for <a class=\"struct\" href=\"crossbeam_epoch/struct.Shared.html\" title=\"struct crossbeam_epoch::Shared\">Shared</a>&lt;'g, T&gt;","synthetic":true,"types":["crossbeam_epoch::atomic::Shared"]},{"text":"impl Freeze for <a class=\"struct\" href=\"crossbeam_epoch/struct.Collector.html\" title=\"struct crossbeam_epoch::Collector\">Collector</a>","synthetic":true,"types":["crossbeam_epoch::collector::Collector"]},{"text":"impl Freeze for <a class=\"struct\" href=\"crossbeam_epoch/struct.LocalHandle.html\" title=\"struct crossbeam_epoch::LocalHandle\">LocalHandle</a>","synthetic":true,"types":["crossbeam_epoch::collector::LocalHandle"]},{"text":"impl Freeze for <a class=\"struct\" href=\"crossbeam_epoch/struct.Guard.html\" title=\"struct crossbeam_epoch::Guard\">Guard</a>","synthetic":true,"types":["crossbeam_epoch::guard::Guard"]}];
implementors["crossbeam_queue"] = [{"text":"impl&lt;T&gt; !Freeze for <a class=\"struct\" href=\"crossbeam_queue/struct.ArrayQueue.html\" title=\"struct crossbeam_queue::ArrayQueue\">ArrayQueue</a>&lt;T&gt;","synthetic":true,"types":["crossbeam_queue::array_queue::ArrayQueue"]},{"text":"impl Freeze for <a class=\"struct\" href=\"crossbeam_queue/struct.PopError.html\" title=\"struct crossbeam_queue::PopError\">PopError</a>","synthetic":true,"types":["crossbeam_queue::err::PopError"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"crossbeam_queue/struct.PushError.html\" title=\"struct crossbeam_queue::PushError\">PushError</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["crossbeam_queue::err::PushError"]},{"text":"impl&lt;T&gt; !Freeze for <a class=\"struct\" href=\"crossbeam_queue/struct.SegQueue.html\" title=\"struct crossbeam_queue::SegQueue\">SegQueue</a>&lt;T&gt;","synthetic":true,"types":["crossbeam_queue::seg_queue::SegQueue"]}];
implementors["crossbeam_utils"] = [{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"crossbeam_utils/struct.CachePadded.html\" title=\"struct crossbeam_utils::CachePadded\">CachePadded</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["crossbeam_utils::cache_padded::CachePadded"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"crossbeam_utils/struct.Backoff.html\" title=\"struct crossbeam_utils::Backoff\">Backoff</a>","synthetic":true,"types":["crossbeam_utils::backoff::Backoff"]},{"text":"impl&lt;T&gt; !Freeze for <a class=\"struct\" href=\"crossbeam_utils/atomic/struct.AtomicCell.html\" title=\"struct crossbeam_utils::atomic::AtomicCell\">AtomicCell</a>&lt;T&gt;","synthetic":true,"types":["crossbeam_utils::atomic::atomic_cell::AtomicCell"]},{"text":"impl Freeze for <a class=\"struct\" href=\"crossbeam_utils/sync/struct.Parker.html\" title=\"struct crossbeam_utils::sync::Parker\">Parker</a>","synthetic":true,"types":["crossbeam_utils::sync::parker::Parker"]},{"text":"impl Freeze for <a class=\"struct\" href=\"crossbeam_utils/sync/struct.Unparker.html\" title=\"struct crossbeam_utils::sync::Unparker\">Unparker</a>","synthetic":true,"types":["crossbeam_utils::sync::parker::Unparker"]},{"text":"impl&lt;T&gt; !Freeze for <a class=\"struct\" href=\"crossbeam_utils/sync/struct.ShardedLock.html\" title=\"struct crossbeam_utils::sync::ShardedLock\">ShardedLock</a>&lt;T&gt;","synthetic":true,"types":["crossbeam_utils::sync::sharded_lock::ShardedLock"]},{"text":"impl&lt;'a, T:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"crossbeam_utils/sync/struct.ShardedLockReadGuard.html\" title=\"struct crossbeam_utils::sync::ShardedLockReadGuard\">ShardedLockReadGuard</a>&lt;'a, T&gt;","synthetic":true,"types":["crossbeam_utils::sync::sharded_lock::ShardedLockReadGuard"]},{"text":"impl&lt;'a, T:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"crossbeam_utils/sync/struct.ShardedLockWriteGuard.html\" title=\"struct crossbeam_utils::sync::ShardedLockWriteGuard\">ShardedLockWriteGuard</a>&lt;'a, T&gt;","synthetic":true,"types":["crossbeam_utils::sync::sharded_lock::ShardedLockWriteGuard"]},{"text":"impl Freeze for <a class=\"struct\" href=\"crossbeam_utils/sync/struct.WaitGroup.html\" title=\"struct crossbeam_utils::sync::WaitGroup\">WaitGroup</a>","synthetic":true,"types":["crossbeam_utils::sync::wait_group::WaitGroup"]},{"text":"impl&lt;'env&gt; Freeze for <a class=\"struct\" href=\"crossbeam_utils/thread/struct.Scope.html\" title=\"struct crossbeam_utils::thread::Scope\">Scope</a>&lt;'env&gt;","synthetic":true,"types":["crossbeam_utils::thread::Scope"]},{"text":"impl&lt;'scope, 'env&gt; Freeze for <a class=\"struct\" href=\"crossbeam_utils/thread/struct.ScopedThreadBuilder.html\" title=\"struct crossbeam_utils::thread::ScopedThreadBuilder\">ScopedThreadBuilder</a>&lt;'scope, 'env&gt;","synthetic":true,"types":["crossbeam_utils::thread::ScopedThreadBuilder"]},{"text":"impl&lt;'scope, T&gt; Freeze for <a class=\"struct\" href=\"crossbeam_utils/thread/struct.ScopedJoinHandle.html\" title=\"struct crossbeam_utils::thread::ScopedJoinHandle\">ScopedJoinHandle</a>&lt;'scope, T&gt;","synthetic":true,"types":["crossbeam_utils::thread::ScopedJoinHandle"]}];
implementors["futures_task"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"futures_task/struct.SpawnError.html\" title=\"struct futures_task::SpawnError\">SpawnError</a>","synthetic":true,"types":["futures_task::spawn::SpawnError"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"futures_task/struct.WakerRef.html\" title=\"struct futures_task::WakerRef\">WakerRef</a>&lt;'a&gt;","synthetic":true,"types":["futures_task::waker_ref::WakerRef"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"futures_task/struct.FutureObj.html\" title=\"struct futures_task::FutureObj\">FutureObj</a>&lt;'a, T&gt;","synthetic":true,"types":["futures_task::future_obj::FutureObj"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"futures_task/struct.LocalFutureObj.html\" title=\"struct futures_task::LocalFutureObj\">LocalFutureObj</a>&lt;'a, T&gt;","synthetic":true,"types":["futures_task::future_obj::LocalFutureObj"]}];
implementors["futures_util"] = [{"text":"impl&lt;F&gt; Freeze for <a class=\"struct\" href=\"futures_util/future/struct.Flatten.html\" title=\"struct futures_util::future::Flatten\">Flatten</a>&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;F as <a class=\"trait\" href=\"futures_util/future/trait.Future.html\" title=\"trait futures_util::future::Future\">Future</a>&gt;::<a class=\"type\" href=\"futures_util/future/trait.Future.html#associatedtype.Output\" title=\"type futures_util::future::Future::Output\">Output</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::future::future::Flatten"]},{"text":"impl&lt;Fut&gt; Freeze for <a class=\"struct\" href=\"futures_util/future/struct.Fuse.html\" title=\"struct futures_util::future::Fuse\">Fuse</a>&lt;Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::future::future::fuse::Fuse"]},{"text":"impl&lt;Fut, F&gt; Freeze for <a class=\"struct\" href=\"futures_util/future/struct.Inspect.html\" title=\"struct futures_util::future::Inspect\">Inspect</a>&lt;Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::future::future::Inspect"]},{"text":"impl&lt;F&gt; Freeze for <a class=\"struct\" href=\"futures_util/future/struct.IntoStream.html\" title=\"struct futures_util::future::IntoStream\">IntoStream</a>&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::future::future::IntoStream"]},{"text":"impl&lt;Fut, F&gt; Freeze for <a class=\"struct\" href=\"futures_util/future/struct.Map.html\" title=\"struct futures_util::future::Map\">Map</a>&lt;Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::future::future::Map"]},{"text":"impl&lt;Fut&gt; Freeze for <a class=\"struct\" href=\"futures_util/future/struct.NeverError.html\" title=\"struct futures_util::future::NeverError\">NeverError</a>&lt;Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::future::future::NeverError"]},{"text":"impl&lt;Fut1, Fut2, F&gt; Freeze for <a class=\"struct\" href=\"futures_util/future/struct.Then.html\" title=\"struct futures_util::future::Then\">Then</a>&lt;Fut1, Fut2, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut1: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut2: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::future::future::Then"]},{"text":"impl&lt;Fut&gt; Freeze for <a class=\"struct\" href=\"futures_util/future/struct.UnitError.html\" title=\"struct futures_util::future::UnitError\">UnitError</a>&lt;Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::future::future::UnitError"]},{"text":"impl&lt;Fut, T&gt; Freeze for <a class=\"struct\" href=\"futures_util/future/struct.MapInto.html\" title=\"struct futures_util::future::MapInto\">MapInto</a>&lt;Fut, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::future::future::MapInto"]},{"text":"impl&lt;F&gt; Freeze for <a class=\"struct\" href=\"futures_util/future/struct.FlattenStream.html\" title=\"struct futures_util::future::FlattenStream\">FlattenStream</a>&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;F as <a class=\"trait\" href=\"futures_util/future/trait.Future.html\" title=\"trait futures_util::future::Future\">Future</a>&gt;::<a class=\"type\" href=\"futures_util/future/trait.Future.html#associatedtype.Output\" title=\"type futures_util::future::Future::Output\">Output</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::future::future::FlattenStream"]},{"text":"impl&lt;Fut&gt; Freeze for <a class=\"struct\" href=\"futures_util/future/struct.CatchUnwind.html\" title=\"struct futures_util::future::CatchUnwind\">CatchUnwind</a>&lt;Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::future::future::catch_unwind::CatchUnwind"]},{"text":"impl&lt;Fut&gt; Freeze for <a class=\"struct\" href=\"futures_util/future/struct.Shared.html\" title=\"struct futures_util::future::Shared\">Shared</a>&lt;Fut&gt;","synthetic":true,"types":["futures_util::future::future::shared::Shared"]},{"text":"impl&lt;Fut1, Fut2, F&gt; Freeze for <a class=\"struct\" href=\"futures_util/future/struct.AndThen.html\" title=\"struct futures_util::future::AndThen\">AndThen</a>&lt;Fut1, Fut2, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut1: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut2: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::future::try_future::AndThen"]},{"text":"impl&lt;Fut, E&gt; Freeze for <a class=\"struct\" href=\"futures_util/future/struct.ErrInto.html\" title=\"struct futures_util::future::ErrInto\">ErrInto</a>&lt;Fut, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::future::try_future::ErrInto"]},{"text":"impl&lt;Fut, E&gt; Freeze for <a class=\"struct\" href=\"futures_util/future/struct.OkInto.html\" title=\"struct futures_util::future::OkInto\">OkInto</a>&lt;Fut, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::future::try_future::OkInto"]},{"text":"impl&lt;Fut, F&gt; Freeze for <a class=\"struct\" href=\"futures_util/future/struct.InspectErr.html\" title=\"struct futures_util::future::InspectErr\">InspectErr</a>&lt;Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::future::try_future::InspectErr"]},{"text":"impl&lt;Fut, F&gt; Freeze for <a class=\"struct\" href=\"futures_util/future/struct.InspectOk.html\" title=\"struct futures_util::future::InspectOk\">InspectOk</a>&lt;Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::future::try_future::InspectOk"]},{"text":"impl&lt;Fut&gt; Freeze for <a class=\"struct\" href=\"futures_util/future/struct.IntoFuture.html\" title=\"struct futures_util::future::IntoFuture\">IntoFuture</a>&lt;Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::future::try_future::into_future::IntoFuture"]},{"text":"impl&lt;Fut, F&gt; Freeze for <a class=\"struct\" href=\"futures_util/future/struct.MapErr.html\" title=\"struct futures_util::future::MapErr\">MapErr</a>&lt;Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::future::try_future::MapErr"]},{"text":"impl&lt;Fut, F&gt; Freeze for <a class=\"struct\" href=\"futures_util/future/struct.MapOk.html\" title=\"struct futures_util::future::MapOk\">MapOk</a>&lt;Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::future::try_future::MapOk"]},{"text":"impl&lt;Fut1, Fut2, F&gt; Freeze for <a class=\"struct\" href=\"futures_util/future/struct.OrElse.html\" title=\"struct futures_util::future::OrElse\">OrElse</a>&lt;Fut1, Fut2, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut1: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut2: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::future::try_future::OrElse"]},{"text":"impl&lt;Fut&gt; Freeze for <a class=\"struct\" href=\"futures_util/future/struct.TryFlattenStream.html\" title=\"struct futures_util::future::TryFlattenStream\">TryFlattenStream</a>&lt;Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut as <a class=\"trait\" href=\"futures_util/future/trait.TryFuture.html\" title=\"trait futures_util::future::TryFuture\">TryFuture</a>&gt;::<a class=\"type\" href=\"futures_util/future/trait.TryFuture.html#associatedtype.Ok\" title=\"type futures_util::future::TryFuture::Ok\">Ok</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::future::try_future::TryFlattenStream"]},{"text":"impl&lt;Fut, F&gt; Freeze for <a class=\"struct\" href=\"futures_util/future/struct.UnwrapOrElse.html\" title=\"struct futures_util::future::UnwrapOrElse\">UnwrapOrElse</a>&lt;Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::future::try_future::UnwrapOrElse"]},{"text":"impl&lt;Fut, F, G&gt; Freeze for <a class=\"struct\" href=\"futures_util/future/struct.MapOkOrElse.html\" title=\"struct futures_util::future::MapOkOrElse\">MapOkOrElse</a>&lt;Fut, F, G&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;G: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::future::try_future::MapOkOrElse"]},{"text":"impl&lt;Fut1, Fut2&gt; Freeze for <a class=\"struct\" href=\"futures_util/future/struct.TryFlatten.html\" title=\"struct futures_util::future::TryFlatten\">TryFlatten</a>&lt;Fut1, Fut2&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut1: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut2: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::future::try_future::TryFlatten"]},{"text":"impl&lt;F&gt; Freeze for <a class=\"struct\" href=\"futures_util/future/struct.Lazy.html\" title=\"struct futures_util::future::Lazy\">Lazy</a>&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::future::lazy::Lazy"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"futures_util/future/struct.Pending.html\" title=\"struct futures_util::future::Pending\">Pending</a>&lt;T&gt;","synthetic":true,"types":["futures_util::future::pending::Pending"]},{"text":"impl&lt;F&gt; Freeze for <a class=\"struct\" href=\"futures_util/future/struct.OptionFuture.html\" title=\"struct futures_util::future::OptionFuture\">OptionFuture</a>&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::future::option::OptionFuture"]},{"text":"impl&lt;F&gt; Freeze for <a class=\"struct\" href=\"futures_util/future/struct.PollFn.html\" title=\"struct futures_util::future::PollFn\">PollFn</a>&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::future::poll_fn::PollFn"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"futures_util/future/struct.Ready.html\" title=\"struct futures_util::future::Ready\">Ready</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::future::ready::Ready"]},{"text":"impl&lt;Fut1, Fut2&gt; Freeze for <a class=\"struct\" href=\"futures_util/future/struct.Join.html\" title=\"struct futures_util::future::Join\">Join</a>&lt;Fut1, Fut2&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut1: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut2: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut1 as <a class=\"trait\" href=\"futures_util/future/trait.Future.html\" title=\"trait futures_util::future::Future\">Future</a>&gt;::<a class=\"type\" href=\"futures_util/future/trait.Future.html#associatedtype.Output\" title=\"type futures_util::future::Future::Output\">Output</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut2 as <a class=\"trait\" href=\"futures_util/future/trait.Future.html\" title=\"trait futures_util::future::Future\">Future</a>&gt;::<a class=\"type\" href=\"futures_util/future/trait.Future.html#associatedtype.Output\" title=\"type futures_util::future::Future::Output\">Output</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::future::join::Join"]},{"text":"impl&lt;Fut1, Fut2, Fut3&gt; Freeze for <a class=\"struct\" href=\"futures_util/future/struct.Join3.html\" title=\"struct futures_util::future::Join3\">Join3</a>&lt;Fut1, Fut2, Fut3&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut1: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut2: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut3: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut1 as <a class=\"trait\" href=\"futures_util/future/trait.Future.html\" title=\"trait futures_util::future::Future\">Future</a>&gt;::<a class=\"type\" href=\"futures_util/future/trait.Future.html#associatedtype.Output\" title=\"type futures_util::future::Future::Output\">Output</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut2 as <a class=\"trait\" href=\"futures_util/future/trait.Future.html\" title=\"trait futures_util::future::Future\">Future</a>&gt;::<a class=\"type\" href=\"futures_util/future/trait.Future.html#associatedtype.Output\" title=\"type futures_util::future::Future::Output\">Output</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut3 as <a class=\"trait\" href=\"futures_util/future/trait.Future.html\" title=\"trait futures_util::future::Future\">Future</a>&gt;::<a class=\"type\" href=\"futures_util/future/trait.Future.html#associatedtype.Output\" title=\"type futures_util::future::Future::Output\">Output</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::future::join::Join3"]},{"text":"impl&lt;Fut1, Fut2, Fut3, Fut4&gt; Freeze for <a class=\"struct\" href=\"futures_util/future/struct.Join4.html\" title=\"struct futures_util::future::Join4\">Join4</a>&lt;Fut1, Fut2, Fut3, Fut4&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut1: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut2: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut3: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut4: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut1 as <a class=\"trait\" href=\"futures_util/future/trait.Future.html\" title=\"trait futures_util::future::Future\">Future</a>&gt;::<a class=\"type\" href=\"futures_util/future/trait.Future.html#associatedtype.Output\" title=\"type futures_util::future::Future::Output\">Output</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut2 as <a class=\"trait\" href=\"futures_util/future/trait.Future.html\" title=\"trait futures_util::future::Future\">Future</a>&gt;::<a class=\"type\" href=\"futures_util/future/trait.Future.html#associatedtype.Output\" title=\"type futures_util::future::Future::Output\">Output</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut3 as <a class=\"trait\" href=\"futures_util/future/trait.Future.html\" title=\"trait futures_util::future::Future\">Future</a>&gt;::<a class=\"type\" href=\"futures_util/future/trait.Future.html#associatedtype.Output\" title=\"type futures_util::future::Future::Output\">Output</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut4 as <a class=\"trait\" href=\"futures_util/future/trait.Future.html\" title=\"trait futures_util::future::Future\">Future</a>&gt;::<a class=\"type\" href=\"futures_util/future/trait.Future.html#associatedtype.Output\" title=\"type futures_util::future::Future::Output\">Output</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::future::join::Join4"]},{"text":"impl&lt;Fut1, Fut2, Fut3, Fut4, Fut5&gt; Freeze for <a class=\"struct\" href=\"futures_util/future/struct.Join5.html\" title=\"struct futures_util::future::Join5\">Join5</a>&lt;Fut1, Fut2, Fut3, Fut4, Fut5&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut1: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut2: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut3: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut4: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut5: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut1 as <a class=\"trait\" href=\"futures_util/future/trait.Future.html\" title=\"trait futures_util::future::Future\">Future</a>&gt;::<a class=\"type\" href=\"futures_util/future/trait.Future.html#associatedtype.Output\" title=\"type futures_util::future::Future::Output\">Output</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut2 as <a class=\"trait\" href=\"futures_util/future/trait.Future.html\" title=\"trait futures_util::future::Future\">Future</a>&gt;::<a class=\"type\" href=\"futures_util/future/trait.Future.html#associatedtype.Output\" title=\"type futures_util::future::Future::Output\">Output</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut3 as <a class=\"trait\" href=\"futures_util/future/trait.Future.html\" title=\"trait futures_util::future::Future\">Future</a>&gt;::<a class=\"type\" href=\"futures_util/future/trait.Future.html#associatedtype.Output\" title=\"type futures_util::future::Future::Output\">Output</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut4 as <a class=\"trait\" href=\"futures_util/future/trait.Future.html\" title=\"trait futures_util::future::Future\">Future</a>&gt;::<a class=\"type\" href=\"futures_util/future/trait.Future.html#associatedtype.Output\" title=\"type futures_util::future::Future::Output\">Output</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut5 as <a class=\"trait\" href=\"futures_util/future/trait.Future.html\" title=\"trait futures_util::future::Future\">Future</a>&gt;::<a class=\"type\" href=\"futures_util/future/trait.Future.html#associatedtype.Output\" title=\"type futures_util::future::Future::Output\">Output</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::future::join::Join5"]},{"text":"impl&lt;F&gt; Freeze for <a class=\"struct\" href=\"futures_util/future/struct.JoinAll.html\" title=\"struct futures_util::future::JoinAll\">JoinAll</a>&lt;F&gt;","synthetic":true,"types":["futures_util::future::join_all::JoinAll"]},{"text":"impl&lt;A, B&gt; Freeze for <a class=\"struct\" href=\"futures_util/future/struct.Select.html\" title=\"struct futures_util::future::Select\">Select</a>&lt;A, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::future::select::Select"]},{"text":"impl&lt;Fut&gt; Freeze for <a class=\"struct\" href=\"futures_util/future/struct.SelectAll.html\" title=\"struct futures_util::future::SelectAll\">SelectAll</a>&lt;Fut&gt;","synthetic":true,"types":["futures_util::future::select_all::SelectAll"]},{"text":"impl&lt;Fut1, Fut2&gt; Freeze for <a class=\"struct\" href=\"futures_util/future/struct.TryJoin.html\" title=\"struct futures_util::future::TryJoin\">TryJoin</a>&lt;Fut1, Fut2&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut1: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut2: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut1 as <a class=\"trait\" href=\"futures_util/future/trait.TryFuture.html\" title=\"trait futures_util::future::TryFuture\">TryFuture</a>&gt;::<a class=\"type\" href=\"futures_util/future/trait.TryFuture.html#associatedtype.Ok\" title=\"type futures_util::future::TryFuture::Ok\">Ok</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut2 as <a class=\"trait\" href=\"futures_util/future/trait.TryFuture.html\" title=\"trait futures_util::future::TryFuture\">TryFuture</a>&gt;::<a class=\"type\" href=\"futures_util/future/trait.TryFuture.html#associatedtype.Ok\" title=\"type futures_util::future::TryFuture::Ok\">Ok</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::future::try_join::TryJoin"]},{"text":"impl&lt;Fut1, Fut2, Fut3&gt; Freeze for <a class=\"struct\" href=\"futures_util/future/struct.TryJoin3.html\" title=\"struct futures_util::future::TryJoin3\">TryJoin3</a>&lt;Fut1, Fut2, Fut3&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut1: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut2: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut3: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut1 as <a class=\"trait\" href=\"futures_util/future/trait.TryFuture.html\" title=\"trait futures_util::future::TryFuture\">TryFuture</a>&gt;::<a class=\"type\" href=\"futures_util/future/trait.TryFuture.html#associatedtype.Ok\" title=\"type futures_util::future::TryFuture::Ok\">Ok</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut2 as <a class=\"trait\" href=\"futures_util/future/trait.TryFuture.html\" title=\"trait futures_util::future::TryFuture\">TryFuture</a>&gt;::<a class=\"type\" href=\"futures_util/future/trait.TryFuture.html#associatedtype.Ok\" title=\"type futures_util::future::TryFuture::Ok\">Ok</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut3 as <a class=\"trait\" href=\"futures_util/future/trait.TryFuture.html\" title=\"trait futures_util::future::TryFuture\">TryFuture</a>&gt;::<a class=\"type\" href=\"futures_util/future/trait.TryFuture.html#associatedtype.Ok\" title=\"type futures_util::future::TryFuture::Ok\">Ok</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::future::try_join::TryJoin3"]},{"text":"impl&lt;Fut1, Fut2, Fut3, Fut4&gt; Freeze for <a class=\"struct\" href=\"futures_util/future/struct.TryJoin4.html\" title=\"struct futures_util::future::TryJoin4\">TryJoin4</a>&lt;Fut1, Fut2, Fut3, Fut4&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut1: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut2: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut3: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut4: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut1 as <a class=\"trait\" href=\"futures_util/future/trait.TryFuture.html\" title=\"trait futures_util::future::TryFuture\">TryFuture</a>&gt;::<a class=\"type\" href=\"futures_util/future/trait.TryFuture.html#associatedtype.Ok\" title=\"type futures_util::future::TryFuture::Ok\">Ok</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut2 as <a class=\"trait\" href=\"futures_util/future/trait.TryFuture.html\" title=\"trait futures_util::future::TryFuture\">TryFuture</a>&gt;::<a class=\"type\" href=\"futures_util/future/trait.TryFuture.html#associatedtype.Ok\" title=\"type futures_util::future::TryFuture::Ok\">Ok</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut3 as <a class=\"trait\" href=\"futures_util/future/trait.TryFuture.html\" title=\"trait futures_util::future::TryFuture\">TryFuture</a>&gt;::<a class=\"type\" href=\"futures_util/future/trait.TryFuture.html#associatedtype.Ok\" title=\"type futures_util::future::TryFuture::Ok\">Ok</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut4 as <a class=\"trait\" href=\"futures_util/future/trait.TryFuture.html\" title=\"trait futures_util::future::TryFuture\">TryFuture</a>&gt;::<a class=\"type\" href=\"futures_util/future/trait.TryFuture.html#associatedtype.Ok\" title=\"type futures_util::future::TryFuture::Ok\">Ok</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::future::try_join::TryJoin4"]},{"text":"impl&lt;Fut1, Fut2, Fut3, Fut4, Fut5&gt; Freeze for <a class=\"struct\" href=\"futures_util/future/struct.TryJoin5.html\" title=\"struct futures_util::future::TryJoin5\">TryJoin5</a>&lt;Fut1, Fut2, Fut3, Fut4, Fut5&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut1: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut2: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut3: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut4: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut5: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut1 as <a class=\"trait\" href=\"futures_util/future/trait.TryFuture.html\" title=\"trait futures_util::future::TryFuture\">TryFuture</a>&gt;::<a class=\"type\" href=\"futures_util/future/trait.TryFuture.html#associatedtype.Ok\" title=\"type futures_util::future::TryFuture::Ok\">Ok</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut2 as <a class=\"trait\" href=\"futures_util/future/trait.TryFuture.html\" title=\"trait futures_util::future::TryFuture\">TryFuture</a>&gt;::<a class=\"type\" href=\"futures_util/future/trait.TryFuture.html#associatedtype.Ok\" title=\"type futures_util::future::TryFuture::Ok\">Ok</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut3 as <a class=\"trait\" href=\"futures_util/future/trait.TryFuture.html\" title=\"trait futures_util::future::TryFuture\">TryFuture</a>&gt;::<a class=\"type\" href=\"futures_util/future/trait.TryFuture.html#associatedtype.Ok\" title=\"type futures_util::future::TryFuture::Ok\">Ok</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut4 as <a class=\"trait\" href=\"futures_util/future/trait.TryFuture.html\" title=\"trait futures_util::future::TryFuture\">TryFuture</a>&gt;::<a class=\"type\" href=\"futures_util/future/trait.TryFuture.html#associatedtype.Ok\" title=\"type futures_util::future::TryFuture::Ok\">Ok</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut5 as <a class=\"trait\" href=\"futures_util/future/trait.TryFuture.html\" title=\"trait futures_util::future::TryFuture\">TryFuture</a>&gt;::<a class=\"type\" href=\"futures_util/future/trait.TryFuture.html#associatedtype.Ok\" title=\"type futures_util::future::TryFuture::Ok\">Ok</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::future::try_join::TryJoin5"]},{"text":"impl&lt;F&gt; Freeze for <a class=\"struct\" href=\"futures_util/future/struct.TryJoinAll.html\" title=\"struct futures_util::future::TryJoinAll\">TryJoinAll</a>&lt;F&gt;","synthetic":true,"types":["futures_util::future::try_join_all::TryJoinAll"]},{"text":"impl&lt;A, B&gt; Freeze for <a class=\"struct\" href=\"futures_util/future/struct.TrySelect.html\" title=\"struct futures_util::future::TrySelect\">TrySelect</a>&lt;A, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::future::try_select::TrySelect"]},{"text":"impl&lt;Fut&gt; Freeze for <a class=\"struct\" href=\"futures_util/future/struct.SelectOk.html\" title=\"struct futures_util::future::SelectOk\">SelectOk</a>&lt;Fut&gt;","synthetic":true,"types":["futures_util::future::select_ok::SelectOk"]},{"text":"impl&lt;Fut&gt; Freeze for <a class=\"struct\" href=\"futures_util/future/struct.Abortable.html\" title=\"struct futures_util::future::Abortable\">Abortable</a>&lt;Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::future::abortable::Abortable"]},{"text":"impl Freeze for <a class=\"struct\" href=\"futures_util/future/struct.AbortHandle.html\" title=\"struct futures_util::future::AbortHandle\">AbortHandle</a>","synthetic":true,"types":["futures_util::future::abortable::AbortHandle"]},{"text":"impl Freeze for <a class=\"struct\" href=\"futures_util/future/struct.AbortRegistration.html\" title=\"struct futures_util::future::AbortRegistration\">AbortRegistration</a>","synthetic":true,"types":["futures_util::future::abortable::AbortRegistration"]},{"text":"impl Freeze for <a class=\"struct\" href=\"futures_util/future/struct.Aborted.html\" title=\"struct futures_util::future::Aborted\">Aborted</a>","synthetic":true,"types":["futures_util::future::abortable::Aborted"]},{"text":"impl&lt;Fut&gt; Freeze for <a class=\"enum\" href=\"futures_util/future/enum.MaybeDone.html\" title=\"enum futures_util::future::MaybeDone\">MaybeDone</a>&lt;Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut as <a class=\"trait\" href=\"futures_util/future/trait.Future.html\" title=\"trait futures_util::future::Future\">Future</a>&gt;::<a class=\"type\" href=\"futures_util/future/trait.Future.html#associatedtype.Output\" title=\"type futures_util::future::Future::Output\">Output</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::future::maybe_done::MaybeDone"]},{"text":"impl&lt;Fut&gt; Freeze for <a class=\"enum\" href=\"futures_util/future/enum.TryMaybeDone.html\" title=\"enum futures_util::future::TryMaybeDone\">TryMaybeDone</a>&lt;Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut as <a class=\"trait\" href=\"futures_util/future/trait.TryFuture.html\" title=\"trait futures_util::future::TryFuture\">TryFuture</a>&gt;::<a class=\"type\" href=\"futures_util/future/trait.TryFuture.html#associatedtype.Ok\" title=\"type futures_util::future::TryFuture::Ok\">Ok</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::future::try_maybe_done::TryMaybeDone"]},{"text":"impl&lt;A, B&gt; Freeze for <a class=\"enum\" href=\"futures_util/future/enum.Either.html\" title=\"enum futures_util::future::Either\">Either</a>&lt;A, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::future::either::Either"]},{"text":"impl&lt;St1, St2&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.Chain.html\" title=\"struct futures_util::stream::Chain\">Chain</a>&lt;St1, St2&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St1: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;St2: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::stream::chain::Chain"]},{"text":"impl&lt;St, C&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.Collect.html\" title=\"struct futures_util::stream::Collect\">Collect</a>&lt;St, C&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;C: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::stream::collect::Collect"]},{"text":"impl&lt;St&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.Concat.html\" title=\"struct futures_util::stream::Concat\">Concat</a>&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St as <a class=\"trait\" href=\"futures_util/stream/trait.Stream.html\" title=\"trait futures_util::stream::Stream\">Stream</a>&gt;::<a class=\"type\" href=\"futures_util/stream/trait.Stream.html#associatedtype.Item\" title=\"type futures_util::stream::Stream::Item\">Item</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::stream::concat::Concat"]},{"text":"impl&lt;St&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.Enumerate.html\" title=\"struct futures_util::stream::Enumerate\">Enumerate</a>&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::stream::enumerate::Enumerate"]},{"text":"impl&lt;St, Fut, F&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.Filter.html\" title=\"struct futures_util::stream::Filter\">Filter</a>&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St as <a class=\"trait\" href=\"futures_util/stream/trait.Stream.html\" title=\"trait futures_util::stream::Stream\">Stream</a>&gt;::<a class=\"type\" href=\"futures_util/stream/trait.Stream.html#associatedtype.Item\" title=\"type futures_util::stream::Stream::Item\">Item</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::stream::filter::Filter"]},{"text":"impl&lt;St, Fut, F&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.FilterMap.html\" title=\"struct futures_util::stream::FilterMap\">FilterMap</a>&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::stream::filter_map::FilterMap"]},{"text":"impl&lt;St, U, F&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.FlatMap.html\" title=\"struct futures_util::stream::FlatMap\">FlatMap</a>&lt;St, U, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;U: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::stream::FlatMap"]},{"text":"impl&lt;St&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.Flatten.html\" title=\"struct futures_util::stream::Flatten\">Flatten</a>&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St as <a class=\"trait\" href=\"futures_util/stream/trait.Stream.html\" title=\"trait futures_util::stream::Stream\">Stream</a>&gt;::<a class=\"type\" href=\"futures_util/stream/trait.Stream.html#associatedtype.Item\" title=\"type futures_util::stream::Stream::Item\">Item</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::stream::Flatten"]},{"text":"impl&lt;St, Fut, T, F&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.Fold.html\" title=\"struct futures_util::stream::Fold\">Fold</a>&lt;St, Fut, T, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::stream::fold::Fold"]},{"text":"impl&lt;St, Fut, F&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.ForEach.html\" title=\"struct futures_util::stream::ForEach\">ForEach</a>&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::stream::for_each::ForEach"]},{"text":"impl&lt;St&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.Fuse.html\" title=\"struct futures_util::stream::Fuse\">Fuse</a>&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::stream::fuse::Fuse"]},{"text":"impl&lt;St, F&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.Inspect.html\" title=\"struct futures_util::stream::Inspect\">Inspect</a>&lt;St, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::stream::Inspect"]},{"text":"impl&lt;St, F&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.Map.html\" title=\"struct futures_util::stream::Map\">Map</a>&lt;St, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::stream::map::Map"]},{"text":"impl&lt;'a, St:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.Next.html\" title=\"struct futures_util::stream::Next\">Next</a>&lt;'a, St&gt;","synthetic":true,"types":["futures_util::stream::stream::next::Next"]},{"text":"impl&lt;'a, St&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.Peek.html\" title=\"struct futures_util::stream::Peek\">Peek</a>&lt;'a, St&gt;","synthetic":true,"types":["futures_util::stream::stream::peek::Peek"]},{"text":"impl&lt;St&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.Peekable.html\" title=\"struct futures_util::stream::Peekable\">Peekable</a>&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St as <a class=\"trait\" href=\"futures_util/stream/trait.Stream.html\" title=\"trait futures_util::stream::Stream\">Stream</a>&gt;::<a class=\"type\" href=\"futures_util/stream/trait.Stream.html#associatedtype.Item\" title=\"type futures_util::stream::Stream::Item\">Item</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::stream::peek::Peekable"]},{"text":"impl&lt;St, S, Fut, F&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.Scan.html\" title=\"struct futures_util::stream::Scan\">Scan</a>&lt;St, S, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::stream::scan::Scan"]},{"text":"impl&lt;'a, St:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.SelectNextSome.html\" title=\"struct futures_util::stream::SelectNextSome\">SelectNextSome</a>&lt;'a, St&gt;","synthetic":true,"types":["futures_util::stream::stream::select_next_some::SelectNextSome"]},{"text":"impl&lt;St&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.Skip.html\" title=\"struct futures_util::stream::Skip\">Skip</a>&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::stream::skip::Skip"]},{"text":"impl&lt;St, Fut, F&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.SkipWhile.html\" title=\"struct futures_util::stream::SkipWhile\">SkipWhile</a>&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St as <a class=\"trait\" href=\"futures_util/stream/trait.Stream.html\" title=\"trait futures_util::stream::Stream\">Stream</a>&gt;::<a class=\"type\" href=\"futures_util/stream/trait.Stream.html#associatedtype.Item\" title=\"type futures_util::stream::Stream::Item\">Item</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::stream::skip_while::SkipWhile"]},{"text":"impl&lt;St&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.StreamFuture.html\" title=\"struct futures_util::stream::StreamFuture\">StreamFuture</a>&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::stream::into_future::StreamFuture"]},{"text":"impl&lt;St&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.Take.html\" title=\"struct futures_util::stream::Take\">Take</a>&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::stream::take::Take"]},{"text":"impl&lt;St, Fut, F&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.TakeWhile.html\" title=\"struct futures_util::stream::TakeWhile\">TakeWhile</a>&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St as <a class=\"trait\" href=\"futures_util/stream/trait.Stream.html\" title=\"trait futures_util::stream::Stream\">Stream</a>&gt;::<a class=\"type\" href=\"futures_util/stream/trait.Stream.html#associatedtype.Item\" title=\"type futures_util::stream::Stream::Item\">Item</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::stream::take_while::TakeWhile"]},{"text":"impl&lt;St, Fut&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.TakeUntil.html\" title=\"struct futures_util::stream::TakeUntil\">TakeUntil</a>&lt;St, Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Fut as <a class=\"trait\" href=\"futures_util/future/trait.Future.html\" title=\"trait futures_util::future::Future\">Future</a>&gt;::<a class=\"type\" href=\"futures_util/future/trait.Future.html#associatedtype.Output\" title=\"type futures_util::future::Future::Output\">Output</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::stream::take_until::TakeUntil"]},{"text":"impl&lt;St, Fut, F&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.Then.html\" title=\"struct futures_util::stream::Then\">Then</a>&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::stream::then::Then"]},{"text":"impl&lt;St1, St2&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.Zip.html\" title=\"struct futures_util::stream::Zip\">Zip</a>&lt;St1, St2&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St1: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;St2: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St1 as <a class=\"trait\" href=\"futures_util/stream/trait.Stream.html\" title=\"trait futures_util::stream::Stream\">Stream</a>&gt;::<a class=\"type\" href=\"futures_util/stream/trait.Stream.html#associatedtype.Item\" title=\"type futures_util::stream::Stream::Item\">Item</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St2 as <a class=\"trait\" href=\"futures_util/stream/trait.Stream.html\" title=\"trait futures_util::stream::Stream\">Stream</a>&gt;::<a class=\"type\" href=\"futures_util/stream/trait.Stream.html#associatedtype.Item\" title=\"type futures_util::stream::Stream::Item\">Item</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::stream::zip::Zip"]},{"text":"impl&lt;St&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.CatchUnwind.html\" title=\"struct futures_util::stream::CatchUnwind\">CatchUnwind</a>&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::stream::catch_unwind::CatchUnwind"]},{"text":"impl&lt;St&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.Chunks.html\" title=\"struct futures_util::stream::Chunks\">Chunks</a>&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::stream::chunks::Chunks"]},{"text":"impl&lt;St&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.ReadyChunks.html\" title=\"struct futures_util::stream::ReadyChunks\">ReadyChunks</a>&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::stream::ready_chunks::ReadyChunks"]},{"text":"impl&lt;St&gt; !Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.BufferUnordered.html\" title=\"struct futures_util::stream::BufferUnordered\">BufferUnordered</a>&lt;St&gt;","synthetic":true,"types":["futures_util::stream::stream::buffer_unordered::BufferUnordered"]},{"text":"impl&lt;St&gt; !Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.Buffered.html\" title=\"struct futures_util::stream::Buffered\">Buffered</a>&lt;St&gt;","synthetic":true,"types":["futures_util::stream::stream::buffered::Buffered"]},{"text":"impl&lt;St, Fut, F&gt; !Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.ForEachConcurrent.html\" title=\"struct futures_util::stream::ForEachConcurrent\">ForEachConcurrent</a>&lt;St, Fut, F&gt;","synthetic":true,"types":["futures_util::stream::stream::for_each_concurrent::ForEachConcurrent"]},{"text":"impl&lt;St, Fut, F&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.AndThen.html\" title=\"struct futures_util::stream::AndThen\">AndThen</a>&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::try_stream::and_then::AndThen"]},{"text":"impl&lt;St, E&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.ErrInto.html\" title=\"struct futures_util::stream::ErrInto\">ErrInto</a>&lt;St, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::try_stream::ErrInto"]},{"text":"impl&lt;St, F&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.InspectErr.html\" title=\"struct futures_util::stream::InspectErr\">InspectErr</a>&lt;St, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::try_stream::InspectErr"]},{"text":"impl&lt;St, F&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.InspectOk.html\" title=\"struct futures_util::stream::InspectOk\">InspectOk</a>&lt;St, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::try_stream::InspectOk"]},{"text":"impl&lt;St&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.IntoStream.html\" title=\"struct futures_util::stream::IntoStream\">IntoStream</a>&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::try_stream::into_stream::IntoStream"]},{"text":"impl&lt;St, F&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.MapErr.html\" title=\"struct futures_util::stream::MapErr\">MapErr</a>&lt;St, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::try_stream::MapErr"]},{"text":"impl&lt;St, F&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.MapOk.html\" title=\"struct futures_util::stream::MapOk\">MapOk</a>&lt;St, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::try_stream::MapOk"]},{"text":"impl&lt;St, Fut, F&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.OrElse.html\" title=\"struct futures_util::stream::OrElse\">OrElse</a>&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::try_stream::or_else::OrElse"]},{"text":"impl&lt;St, C&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.TryCollect.html\" title=\"struct futures_util::stream::TryCollect\">TryCollect</a>&lt;St, C&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;C: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::try_stream::try_collect::TryCollect"]},{"text":"impl&lt;St&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.TryConcat.html\" title=\"struct futures_util::stream::TryConcat\">TryConcat</a>&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St as <a class=\"trait\" href=\"futures_util/stream/trait.TryStream.html\" title=\"trait futures_util::stream::TryStream\">TryStream</a>&gt;::<a class=\"type\" href=\"futures_util/stream/trait.TryStream.html#associatedtype.Ok\" title=\"type futures_util::stream::TryStream::Ok\">Ok</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::try_stream::try_concat::TryConcat"]},{"text":"impl&lt;St, Fut, F&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.TryFilter.html\" title=\"struct futures_util::stream::TryFilter\">TryFilter</a>&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St as <a class=\"trait\" href=\"futures_util/stream/trait.TryStream.html\" title=\"trait futures_util::stream::TryStream\">TryStream</a>&gt;::<a class=\"type\" href=\"futures_util/stream/trait.TryStream.html#associatedtype.Ok\" title=\"type futures_util::stream::TryStream::Ok\">Ok</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::try_stream::try_filter::TryFilter"]},{"text":"impl&lt;St, Fut, F&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.TryFilterMap.html\" title=\"struct futures_util::stream::TryFilterMap\">TryFilterMap</a>&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::try_stream::try_filter_map::TryFilterMap"]},{"text":"impl&lt;St&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.TryFlatten.html\" title=\"struct futures_util::stream::TryFlatten\">TryFlatten</a>&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St as <a class=\"trait\" href=\"futures_util/stream/trait.TryStream.html\" title=\"trait futures_util::stream::TryStream\">TryStream</a>&gt;::<a class=\"type\" href=\"futures_util/stream/trait.TryStream.html#associatedtype.Ok\" title=\"type futures_util::stream::TryStream::Ok\">Ok</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::try_stream::try_flatten::TryFlatten"]},{"text":"impl&lt;St, Fut, T, F&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.TryFold.html\" title=\"struct futures_util::stream::TryFold\">TryFold</a>&lt;St, Fut, T, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::try_stream::try_fold::TryFold"]},{"text":"impl&lt;St, Fut, F&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.TryForEach.html\" title=\"struct futures_util::stream::TryForEach\">TryForEach</a>&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::try_stream::try_for_each::TryForEach"]},{"text":"impl&lt;'a, St:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.TryNext.html\" title=\"struct futures_util::stream::TryNext\">TryNext</a>&lt;'a, St&gt;","synthetic":true,"types":["futures_util::stream::try_stream::try_next::TryNext"]},{"text":"impl&lt;St, Fut, F&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.TrySkipWhile.html\" title=\"struct futures_util::stream::TrySkipWhile\">TrySkipWhile</a>&lt;St, Fut, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St as <a class=\"trait\" href=\"futures_util/stream/trait.TryStream.html\" title=\"trait futures_util::stream::TryStream\">TryStream</a>&gt;::<a class=\"type\" href=\"futures_util/stream/trait.TryStream.html#associatedtype.Ok\" title=\"type futures_util::stream::TryStream::Ok\">Ok</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::try_stream::try_skip_while::TrySkipWhile"]},{"text":"impl&lt;T, F, Fut&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.TryUnfold.html\" title=\"struct futures_util::stream::TryUnfold\">TryUnfold</a>&lt;T, F, Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::try_stream::try_unfold::TryUnfold"]},{"text":"impl&lt;St&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.IntoAsyncRead.html\" title=\"struct futures_util::stream::IntoAsyncRead\">IntoAsyncRead</a>&lt;St&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;St as <a class=\"trait\" href=\"futures_util/stream/trait.TryStream.html\" title=\"trait futures_util::stream::TryStream\">TryStream</a>&gt;::<a class=\"type\" href=\"futures_util/stream/trait.TryStream.html#associatedtype.Ok\" title=\"type futures_util::stream::TryStream::Ok\">Ok</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::try_stream::into_async_read::IntoAsyncRead"]},{"text":"impl&lt;St&gt; !Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.TryBufferUnordered.html\" title=\"struct futures_util::stream::TryBufferUnordered\">TryBufferUnordered</a>&lt;St&gt;","synthetic":true,"types":["futures_util::stream::try_stream::try_buffer_unordered::TryBufferUnordered"]},{"text":"impl&lt;St, Fut, F&gt; !Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.TryForEachConcurrent.html\" title=\"struct futures_util::stream::TryForEachConcurrent\">TryForEachConcurrent</a>&lt;St, Fut, F&gt;","synthetic":true,"types":["futures_util::stream::try_stream::try_for_each_concurrent::TryForEachConcurrent"]},{"text":"impl&lt;I&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.Iter.html\" title=\"struct futures_util::stream::Iter\">Iter</a>&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::iter::Iter"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.Repeat.html\" title=\"struct futures_util::stream::Repeat\">Repeat</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::repeat::Repeat"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.Empty.html\" title=\"struct futures_util::stream::Empty\">Empty</a>&lt;T&gt;","synthetic":true,"types":["futures_util::stream::empty::Empty"]},{"text":"impl&lt;Fut&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.Once.html\" title=\"struct futures_util::stream::Once\">Once</a>&lt;Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::once::Once"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.Pending.html\" title=\"struct futures_util::stream::Pending\">Pending</a>&lt;T&gt;","synthetic":true,"types":["futures_util::stream::pending::Pending"]},{"text":"impl&lt;F&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.PollFn.html\" title=\"struct futures_util::stream::PollFn\">PollFn</a>&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::poll_fn::PollFn"]},{"text":"impl&lt;St1, St2&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.Select.html\" title=\"struct futures_util::stream::Select\">Select</a>&lt;St1, St2&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;St1: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;St2: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::select::Select"]},{"text":"impl&lt;T, F, Fut&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.Unfold.html\" title=\"struct futures_util::stream::Unfold\">Unfold</a>&lt;T, F, Fut&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Fut: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::stream::unfold::Unfold"]},{"text":"impl&lt;T&gt; !Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.FuturesOrdered.html\" title=\"struct futures_util::stream::FuturesOrdered\">FuturesOrdered</a>&lt;T&gt;","synthetic":true,"types":["futures_util::stream::futures_ordered::FuturesOrdered"]},{"text":"impl&lt;Fut&gt; !Freeze for <a class=\"struct\" href=\"futures_util/stream/futures_unordered/struct.FuturesUnordered.html\" title=\"struct futures_util::stream::futures_unordered::FuturesUnordered\">FuturesUnordered</a>&lt;Fut&gt;","synthetic":true,"types":["futures_util::stream::futures_unordered::FuturesUnordered"]},{"text":"impl&lt;St&gt; !Freeze for <a class=\"struct\" href=\"futures_util/stream/struct.SelectAll.html\" title=\"struct futures_util::stream::SelectAll\">SelectAll</a>&lt;St&gt;","synthetic":true,"types":["futures_util::stream::select_all::SelectAll"]},{"text":"impl&lt;'a, Fut&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/futures_unordered/struct.Iter.html\" title=\"struct futures_util::stream::futures_unordered::Iter\">Iter</a>&lt;'a, Fut&gt;","synthetic":true,"types":["futures_util::stream::futures_unordered::iter::Iter"]},{"text":"impl&lt;'a, Fut&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/futures_unordered/struct.IterMut.html\" title=\"struct futures_util::stream::futures_unordered::IterMut\">IterMut</a>&lt;'a, Fut&gt;","synthetic":true,"types":["futures_util::stream::futures_unordered::iter::IterMut"]},{"text":"impl&lt;'a, Fut&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/futures_unordered/struct.IterPinMut.html\" title=\"struct futures_util::stream::futures_unordered::IterPinMut\">IterPinMut</a>&lt;'a, Fut&gt;","synthetic":true,"types":["futures_util::stream::futures_unordered::iter::IterPinMut"]},{"text":"impl&lt;'a, Fut&gt; Freeze for <a class=\"struct\" href=\"futures_util/stream/futures_unordered/struct.IterPinRef.html\" title=\"struct futures_util::stream::futures_unordered::IterPinRef\">IterPinRef</a>&lt;'a, Fut&gt;","synthetic":true,"types":["futures_util::stream::futures_unordered::iter::IterPinRef"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"futures_util/io/struct.AllowStdIo.html\" title=\"struct futures_util::io::AllowStdIo\">AllowStdIo</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::io::allow_std::AllowStdIo"]},{"text":"impl&lt;R&gt; Freeze for <a class=\"struct\" href=\"futures_util/io/struct.BufReader.html\" title=\"struct futures_util::io::BufReader\">BufReader</a>&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::io::buf_reader::BufReader"]},{"text":"impl&lt;W&gt; Freeze for <a class=\"struct\" href=\"futures_util/io/struct.BufWriter.html\" title=\"struct futures_util::io::BufWriter\">BufWriter</a>&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::io::buf_writer::BufWriter"]},{"text":"impl&lt;T, U&gt; Freeze for <a class=\"struct\" href=\"futures_util/io/struct.Chain.html\" title=\"struct futures_util::io::Chain\">Chain</a>&lt;T, U&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;U: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::io::chain::Chain"]},{"text":"impl&lt;'a, W:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"futures_util/io/struct.Close.html\" title=\"struct futures_util::io::Close\">Close</a>&lt;'a, W&gt;","synthetic":true,"types":["futures_util::io::close::Close"]},{"text":"impl&lt;'a, R, W:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"futures_util/io/struct.Copy.html\" title=\"struct futures_util::io::Copy\">Copy</a>&lt;'a, R, W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::io::copy::Copy"]},{"text":"impl&lt;'a, R, W:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"futures_util/io/struct.CopyBuf.html\" title=\"struct futures_util::io::CopyBuf\">CopyBuf</a>&lt;'a, R, W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::io::copy_buf::CopyBuf"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"futures_util/io/struct.Cursor.html\" title=\"struct futures_util::io::Cursor\">Cursor</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::io::cursor::Cursor"]},{"text":"impl Freeze for <a class=\"struct\" href=\"futures_util/io/struct.Empty.html\" title=\"struct futures_util::io::Empty\">Empty</a>","synthetic":true,"types":["futures_util::io::empty::Empty"]},{"text":"impl&lt;'a, W:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"futures_util/io/struct.Flush.html\" title=\"struct futures_util::io::Flush\">Flush</a>&lt;'a, W&gt;","synthetic":true,"types":["futures_util::io::flush::Flush"]},{"text":"impl&lt;R&gt; Freeze for <a class=\"struct\" href=\"futures_util/io/struct.Lines.html\" title=\"struct futures_util::io::Lines\">Lines</a>&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::io::lines::Lines"]},{"text":"impl&lt;'a, R:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"futures_util/io/struct.Read.html\" title=\"struct futures_util::io::Read\">Read</a>&lt;'a, R&gt;","synthetic":true,"types":["futures_util::io::read::Read"]},{"text":"impl&lt;'a, R:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"futures_util/io/struct.ReadVectored.html\" title=\"struct futures_util::io::ReadVectored\">ReadVectored</a>&lt;'a, R&gt;","synthetic":true,"types":["futures_util::io::read_vectored::ReadVectored"]},{"text":"impl&lt;'a, R:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"futures_util/io/struct.ReadExact.html\" title=\"struct futures_util::io::ReadExact\">ReadExact</a>&lt;'a, R&gt;","synthetic":true,"types":["futures_util::io::read_exact::ReadExact"]},{"text":"impl&lt;'a, R:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"futures_util/io/struct.ReadLine.html\" title=\"struct futures_util::io::ReadLine\">ReadLine</a>&lt;'a, R&gt;","synthetic":true,"types":["futures_util::io::read_line::ReadLine"]},{"text":"impl&lt;'a, R:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"futures_util/io/struct.ReadToEnd.html\" title=\"struct futures_util::io::ReadToEnd\">ReadToEnd</a>&lt;'a, R&gt;","synthetic":true,"types":["futures_util::io::read_to_end::ReadToEnd"]},{"text":"impl&lt;'a, R:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"futures_util/io/struct.ReadToString.html\" title=\"struct futures_util::io::ReadToString\">ReadToString</a>&lt;'a, R&gt;","synthetic":true,"types":["futures_util::io::read_to_string::ReadToString"]},{"text":"impl&lt;'a, R:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"futures_util/io/struct.ReadUntil.html\" title=\"struct futures_util::io::ReadUntil\">ReadUntil</a>&lt;'a, R&gt;","synthetic":true,"types":["futures_util::io::read_until::ReadUntil"]},{"text":"impl Freeze for <a class=\"struct\" href=\"futures_util/io/struct.Repeat.html\" title=\"struct futures_util::io::Repeat\">Repeat</a>","synthetic":true,"types":["futures_util::io::repeat::Repeat"]},{"text":"impl&lt;'a, S:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"futures_util/io/struct.Seek.html\" title=\"struct futures_util::io::Seek\">Seek</a>&lt;'a, S&gt;","synthetic":true,"types":["futures_util::io::seek::Seek"]},{"text":"impl Freeze for <a class=\"struct\" href=\"futures_util/io/struct.Sink.html\" title=\"struct futures_util::io::Sink\">Sink</a>","synthetic":true,"types":["futures_util::io::sink::Sink"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"futures_util/io/struct.ReadHalf.html\" title=\"struct futures_util::io::ReadHalf\">ReadHalf</a>&lt;T&gt;","synthetic":true,"types":["futures_util::io::split::ReadHalf"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"futures_util/io/struct.WriteHalf.html\" title=\"struct futures_util::io::WriteHalf\">WriteHalf</a>&lt;T&gt;","synthetic":true,"types":["futures_util::io::split::WriteHalf"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"futures_util/io/struct.ReuniteError.html\" title=\"struct futures_util::io::ReuniteError\">ReuniteError</a>&lt;T&gt;","synthetic":true,"types":["futures_util::io::split::ReuniteError"]},{"text":"impl&lt;R&gt; Freeze for <a class=\"struct\" href=\"futures_util/io/struct.Take.html\" title=\"struct futures_util::io::Take\">Take</a>&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::io::take::Take"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"futures_util/io/struct.Window.html\" title=\"struct futures_util::io::Window\">Window</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["futures_util::io::window::Window"]},{"text":"impl&lt;'a, W:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"futures_util/io/struct.Write.html\" title=\"struct futures_util::io::Write\">Write</a>&lt;'a, W&gt;","synthetic":true,"types":["futures_util::io::write::Write"]},{"text":"impl&lt;'a, W:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"futures_util/io/struct.WriteVectored.html\" title=\"struct futures_util::io::WriteVectored\">WriteVectored</a>&lt;'a, W&gt;","synthetic":true,"types":["futures_util::io::write_vectored::WriteVectored"]},{"text":"impl&lt;'a, W:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"futures_util/io/struct.WriteAll.html\" title=\"struct futures_util::io::WriteAll\">WriteAll</a>&lt;'a, W&gt;","synthetic":true,"types":["futures_util::io::write_all::WriteAll"]},{"text":"impl&lt;'a, T:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>, U:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"futures_util/lock/struct.MappedMutexGuard.html\" title=\"struct futures_util::lock::MappedMutexGuard\">MappedMutexGuard</a>&lt;'a, T, U&gt;","synthetic":true,"types":["futures_util::lock::mutex::MappedMutexGuard"]},{"text":"impl&lt;T&gt; !Freeze for <a class=\"struct\" href=\"futures_util/lock/struct.Mutex.html\" title=\"struct futures_util::lock::Mutex\">Mutex</a>&lt;T&gt;","synthetic":true,"types":["futures_util::lock::mutex::Mutex"]},{"text":"impl&lt;'a, T:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"futures_util/lock/struct.MutexLockFuture.html\" title=\"struct futures_util::lock::MutexLockFuture\">MutexLockFuture</a>&lt;'a, T&gt;","synthetic":true,"types":["futures_util::lock::mutex::MutexLockFuture"]},{"text":"impl&lt;'a, T:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"futures_util/lock/struct.MutexGuard.html\" title=\"struct futures_util::lock::MutexGuard\">MutexGuard</a>&lt;'a, T&gt;","synthetic":true,"types":["futures_util::lock::mutex::MutexGuard"]}];
implementors["libc"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.group.html\" title=\"struct libc::group\">group</a>","synthetic":true,"types":["libc::unix::group"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.utimbuf.html\" title=\"struct libc::utimbuf\">utimbuf</a>","synthetic":true,"types":["libc::unix::utimbuf"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.timeval.html\" title=\"struct libc::timeval\">timeval</a>","synthetic":true,"types":["libc::unix::timeval"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.timespec.html\" title=\"struct libc::timespec\">timespec</a>","synthetic":true,"types":["libc::unix::timespec"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.rlimit.html\" title=\"struct libc::rlimit\">rlimit</a>","synthetic":true,"types":["libc::unix::rlimit"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.rusage.html\" title=\"struct libc::rusage\">rusage</a>","synthetic":true,"types":["libc::unix::rusage"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.ipv6_mreq.html\" title=\"struct libc::ipv6_mreq\">ipv6_mreq</a>","synthetic":true,"types":["libc::unix::ipv6_mreq"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.hostent.html\" title=\"struct libc::hostent\">hostent</a>","synthetic":true,"types":["libc::unix::hostent"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.iovec.html\" title=\"struct libc::iovec\">iovec</a>","synthetic":true,"types":["libc::unix::iovec"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.pollfd.html\" title=\"struct libc::pollfd\">pollfd</a>","synthetic":true,"types":["libc::unix::pollfd"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.winsize.html\" title=\"struct libc::winsize\">winsize</a>","synthetic":true,"types":["libc::unix::winsize"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.linger.html\" title=\"struct libc::linger\">linger</a>","synthetic":true,"types":["libc::unix::linger"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.sigval.html\" title=\"struct libc::sigval\">sigval</a>","synthetic":true,"types":["libc::unix::sigval"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.itimerval.html\" title=\"struct libc::itimerval\">itimerval</a>","synthetic":true,"types":["libc::unix::itimerval"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.tms.html\" title=\"struct libc::tms\">tms</a>","synthetic":true,"types":["libc::unix::tms"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.servent.html\" title=\"struct libc::servent\">servent</a>","synthetic":true,"types":["libc::unix::servent"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.protoent.html\" title=\"struct libc::protoent\">protoent</a>","synthetic":true,"types":["libc::unix::protoent"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.in_addr.html\" title=\"struct libc::in_addr\">in_addr</a>","synthetic":true,"types":["libc::unix::linux_like::in_addr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.ip_mreq.html\" title=\"struct libc::ip_mreq\">ip_mreq</a>","synthetic":true,"types":["libc::unix::linux_like::ip_mreq"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.ip_mreq_source.html\" title=\"struct libc::ip_mreq_source\">ip_mreq_source</a>","synthetic":true,"types":["libc::unix::linux_like::ip_mreq_source"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.sockaddr.html\" title=\"struct libc::sockaddr\">sockaddr</a>","synthetic":true,"types":["libc::unix::linux_like::sockaddr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.sockaddr_in.html\" title=\"struct libc::sockaddr_in\">sockaddr_in</a>","synthetic":true,"types":["libc::unix::linux_like::sockaddr_in"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.sockaddr_in6.html\" title=\"struct libc::sockaddr_in6\">sockaddr_in6</a>","synthetic":true,"types":["libc::unix::linux_like::sockaddr_in6"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.addrinfo.html\" title=\"struct libc::addrinfo\">addrinfo</a>","synthetic":true,"types":["libc::unix::linux_like::addrinfo"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.sockaddr_ll.html\" title=\"struct libc::sockaddr_ll\">sockaddr_ll</a>","synthetic":true,"types":["libc::unix::linux_like::sockaddr_ll"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.fd_set.html\" title=\"struct libc::fd_set\">fd_set</a>","synthetic":true,"types":["libc::unix::linux_like::fd_set"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.tm.html\" title=\"struct libc::tm\">tm</a>","synthetic":true,"types":["libc::unix::linux_like::tm"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.sched_param.html\" title=\"struct libc::sched_param\">sched_param</a>","synthetic":true,"types":["libc::unix::linux_like::sched_param"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.Dl_info.html\" title=\"struct libc::Dl_info\">Dl_info</a>","synthetic":true,"types":["libc::unix::linux_like::Dl_info"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.lconv.html\" title=\"struct libc::lconv\">lconv</a>","synthetic":true,"types":["libc::unix::linux_like::lconv"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.in_pktinfo.html\" title=\"struct libc::in_pktinfo\">in_pktinfo</a>","synthetic":true,"types":["libc::unix::linux_like::in_pktinfo"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.ifaddrs.html\" title=\"struct libc::ifaddrs\">ifaddrs</a>","synthetic":true,"types":["libc::unix::linux_like::ifaddrs"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.in6_rtmsg.html\" title=\"struct libc::in6_rtmsg\">in6_rtmsg</a>","synthetic":true,"types":["libc::unix::linux_like::in6_rtmsg"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.arpreq.html\" title=\"struct libc::arpreq\">arpreq</a>","synthetic":true,"types":["libc::unix::linux_like::arpreq"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.arpreq_old.html\" title=\"struct libc::arpreq_old\">arpreq_old</a>","synthetic":true,"types":["libc::unix::linux_like::arpreq_old"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.arphdr.html\" title=\"struct libc::arphdr\">arphdr</a>","synthetic":true,"types":["libc::unix::linux_like::arphdr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.mmsghdr.html\" title=\"struct libc::mmsghdr\">mmsghdr</a>","synthetic":true,"types":["libc::unix::linux_like::mmsghdr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.epoll_event.html\" title=\"struct libc::epoll_event\">epoll_event</a>","synthetic":true,"types":["libc::unix::linux_like::epoll_event"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.sockaddr_un.html\" title=\"struct libc::sockaddr_un\">sockaddr_un</a>","synthetic":true,"types":["libc::unix::linux_like::sockaddr_un"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.sockaddr_storage.html\" title=\"struct libc::sockaddr_storage\">sockaddr_storage</a>","synthetic":true,"types":["libc::unix::linux_like::sockaddr_storage"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.utsname.html\" title=\"struct libc::utsname\">utsname</a>","synthetic":true,"types":["libc::unix::linux_like::utsname"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.sigevent.html\" title=\"struct libc::sigevent\">sigevent</a>","synthetic":true,"types":["libc::unix::linux_like::sigevent"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.rlimit64.html\" title=\"struct libc::rlimit64\">rlimit64</a>","synthetic":true,"types":["libc::unix::linux_like::linux::rlimit64"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.glob_t.html\" title=\"struct libc::glob_t\">glob_t</a>","synthetic":true,"types":["libc::unix::linux_like::linux::glob_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.passwd.html\" title=\"struct libc::passwd\">passwd</a>","synthetic":true,"types":["libc::unix::linux_like::linux::passwd"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.spwd.html\" title=\"struct libc::spwd\">spwd</a>","synthetic":true,"types":["libc::unix::linux_like::linux::spwd"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.dqblk.html\" title=\"struct libc::dqblk\">dqblk</a>","synthetic":true,"types":["libc::unix::linux_like::linux::dqblk"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.signalfd_siginfo.html\" title=\"struct libc::signalfd_siginfo\">signalfd_siginfo</a>","synthetic":true,"types":["libc::unix::linux_like::linux::signalfd_siginfo"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.itimerspec.html\" title=\"struct libc::itimerspec\">itimerspec</a>","synthetic":true,"types":["libc::unix::linux_like::linux::itimerspec"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.fsid_t.html\" title=\"struct libc::fsid_t\">fsid_t</a>","synthetic":true,"types":["libc::unix::linux_like::linux::fsid_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.packet_mreq.html\" title=\"struct libc::packet_mreq\">packet_mreq</a>","synthetic":true,"types":["libc::unix::linux_like::linux::packet_mreq"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.cpu_set_t.html\" title=\"struct libc::cpu_set_t\">cpu_set_t</a>","synthetic":true,"types":["libc::unix::linux_like::linux::cpu_set_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.if_nameindex.html\" title=\"struct libc::if_nameindex\">if_nameindex</a>","synthetic":true,"types":["libc::unix::linux_like::linux::if_nameindex"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.msginfo.html\" title=\"struct libc::msginfo\">msginfo</a>","synthetic":true,"types":["libc::unix::linux_like::linux::msginfo"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.sembuf.html\" title=\"struct libc::sembuf\">sembuf</a>","synthetic":true,"types":["libc::unix::linux_like::linux::sembuf"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.input_event.html\" title=\"struct libc::input_event\">input_event</a>","synthetic":true,"types":["libc::unix::linux_like::linux::input_event"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.input_id.html\" title=\"struct libc::input_id\">input_id</a>","synthetic":true,"types":["libc::unix::linux_like::linux::input_id"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.input_absinfo.html\" title=\"struct libc::input_absinfo\">input_absinfo</a>","synthetic":true,"types":["libc::unix::linux_like::linux::input_absinfo"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.input_keymap_entry.html\" title=\"struct libc::input_keymap_entry\">input_keymap_entry</a>","synthetic":true,"types":["libc::unix::linux_like::linux::input_keymap_entry"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.input_mask.html\" title=\"struct libc::input_mask\">input_mask</a>","synthetic":true,"types":["libc::unix::linux_like::linux::input_mask"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.ff_replay.html\" title=\"struct libc::ff_replay\">ff_replay</a>","synthetic":true,"types":["libc::unix::linux_like::linux::ff_replay"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.ff_trigger.html\" title=\"struct libc::ff_trigger\">ff_trigger</a>","synthetic":true,"types":["libc::unix::linux_like::linux::ff_trigger"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.ff_envelope.html\" title=\"struct libc::ff_envelope\">ff_envelope</a>","synthetic":true,"types":["libc::unix::linux_like::linux::ff_envelope"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.ff_constant_effect.html\" title=\"struct libc::ff_constant_effect\">ff_constant_effect</a>","synthetic":true,"types":["libc::unix::linux_like::linux::ff_constant_effect"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.ff_ramp_effect.html\" title=\"struct libc::ff_ramp_effect\">ff_ramp_effect</a>","synthetic":true,"types":["libc::unix::linux_like::linux::ff_ramp_effect"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.ff_condition_effect.html\" title=\"struct libc::ff_condition_effect\">ff_condition_effect</a>","synthetic":true,"types":["libc::unix::linux_like::linux::ff_condition_effect"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.ff_periodic_effect.html\" title=\"struct libc::ff_periodic_effect\">ff_periodic_effect</a>","synthetic":true,"types":["libc::unix::linux_like::linux::ff_periodic_effect"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.ff_rumble_effect.html\" title=\"struct libc::ff_rumble_effect\">ff_rumble_effect</a>","synthetic":true,"types":["libc::unix::linux_like::linux::ff_rumble_effect"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.ff_effect.html\" title=\"struct libc::ff_effect\">ff_effect</a>","synthetic":true,"types":["libc::unix::linux_like::linux::ff_effect"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.dl_phdr_info.html\" title=\"struct libc::dl_phdr_info\">dl_phdr_info</a>","synthetic":true,"types":["libc::unix::linux_like::linux::dl_phdr_info"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.Elf32_Ehdr.html\" title=\"struct libc::Elf32_Ehdr\">Elf32_Ehdr</a>","synthetic":true,"types":["libc::unix::linux_like::linux::Elf32_Ehdr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.Elf64_Ehdr.html\" title=\"struct libc::Elf64_Ehdr\">Elf64_Ehdr</a>","synthetic":true,"types":["libc::unix::linux_like::linux::Elf64_Ehdr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.Elf32_Sym.html\" title=\"struct libc::Elf32_Sym\">Elf32_Sym</a>","synthetic":true,"types":["libc::unix::linux_like::linux::Elf32_Sym"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.Elf64_Sym.html\" title=\"struct libc::Elf64_Sym\">Elf64_Sym</a>","synthetic":true,"types":["libc::unix::linux_like::linux::Elf64_Sym"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.Elf32_Phdr.html\" title=\"struct libc::Elf32_Phdr\">Elf32_Phdr</a>","synthetic":true,"types":["libc::unix::linux_like::linux::Elf32_Phdr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.Elf64_Phdr.html\" title=\"struct libc::Elf64_Phdr\">Elf64_Phdr</a>","synthetic":true,"types":["libc::unix::linux_like::linux::Elf64_Phdr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.Elf32_Shdr.html\" title=\"struct libc::Elf32_Shdr\">Elf32_Shdr</a>","synthetic":true,"types":["libc::unix::linux_like::linux::Elf32_Shdr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.Elf64_Shdr.html\" title=\"struct libc::Elf64_Shdr\">Elf64_Shdr</a>","synthetic":true,"types":["libc::unix::linux_like::linux::Elf64_Shdr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.Elf32_Chdr.html\" title=\"struct libc::Elf32_Chdr\">Elf32_Chdr</a>","synthetic":true,"types":["libc::unix::linux_like::linux::Elf32_Chdr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.Elf64_Chdr.html\" title=\"struct libc::Elf64_Chdr\">Elf64_Chdr</a>","synthetic":true,"types":["libc::unix::linux_like::linux::Elf64_Chdr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.ucred.html\" title=\"struct libc::ucred\">ucred</a>","synthetic":true,"types":["libc::unix::linux_like::linux::ucred"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.mntent.html\" title=\"struct libc::mntent\">mntent</a>","synthetic":true,"types":["libc::unix::linux_like::linux::mntent"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.posix_spawn_file_actions_t.html\" title=\"struct libc::posix_spawn_file_actions_t\">posix_spawn_file_actions_t</a>","synthetic":true,"types":["libc::unix::linux_like::linux::posix_spawn_file_actions_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.posix_spawnattr_t.html\" title=\"struct libc::posix_spawnattr_t\">posix_spawnattr_t</a>","synthetic":true,"types":["libc::unix::linux_like::linux::posix_spawnattr_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.genlmsghdr.html\" title=\"struct libc::genlmsghdr\">genlmsghdr</a>","synthetic":true,"types":["libc::unix::linux_like::linux::genlmsghdr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.in6_pktinfo.html\" title=\"struct libc::in6_pktinfo\">in6_pktinfo</a>","synthetic":true,"types":["libc::unix::linux_like::linux::in6_pktinfo"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.arpd_request.html\" title=\"struct libc::arpd_request\">arpd_request</a>","synthetic":true,"types":["libc::unix::linux_like::linux::arpd_request"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.inotify_event.html\" title=\"struct libc::inotify_event\">inotify_event</a>","synthetic":true,"types":["libc::unix::linux_like::linux::inotify_event"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.fanotify_response.html\" title=\"struct libc::fanotify_response\">fanotify_response</a>","synthetic":true,"types":["libc::unix::linux_like::linux::fanotify_response"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.sockaddr_vm.html\" title=\"struct libc::sockaddr_vm\">sockaddr_vm</a>","synthetic":true,"types":["libc::unix::linux_like::linux::sockaddr_vm"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.regmatch_t.html\" title=\"struct libc::regmatch_t\">regmatch_t</a>","synthetic":true,"types":["libc::unix::linux_like::linux::regmatch_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.sock_extended_err.html\" title=\"struct libc::sock_extended_err\">sock_extended_err</a>","synthetic":true,"types":["libc::unix::linux_like::linux::sock_extended_err"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.sockaddr_nl.html\" title=\"struct libc::sockaddr_nl\">sockaddr_nl</a>","synthetic":true,"types":["libc::unix::linux_like::linux::sockaddr_nl"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.dirent.html\" title=\"struct libc::dirent\">dirent</a>","synthetic":true,"types":["libc::unix::linux_like::linux::dirent"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.dirent64.html\" title=\"struct libc::dirent64\">dirent64</a>","synthetic":true,"types":["libc::unix::linux_like::linux::dirent64"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.sockaddr_alg.html\" title=\"struct libc::sockaddr_alg\">sockaddr_alg</a>","synthetic":true,"types":["libc::unix::linux_like::linux::sockaddr_alg"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.af_alg_iv.html\" title=\"struct libc::af_alg_iv\">af_alg_iv</a>","synthetic":true,"types":["libc::unix::linux_like::linux::af_alg_iv"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.mq_attr.html\" title=\"struct libc::mq_attr\">mq_attr</a>","synthetic":true,"types":["libc::unix::linux_like::linux::mq_attr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.statx.html\" title=\"struct libc::statx\">statx</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::statx"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.statx_timestamp.html\" title=\"struct libc::statx_timestamp\">statx_timestamp</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::statx_timestamp"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.aiocb.html\" title=\"struct libc::aiocb\">aiocb</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::aiocb"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.__exit_status.html\" title=\"struct libc::__exit_status\">__exit_status</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::__exit_status"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.__timeval.html\" title=\"struct libc::__timeval\">__timeval</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::__timeval"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.glob64_t.html\" title=\"struct libc::glob64_t\">glob64_t</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::glob64_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.msghdr.html\" title=\"struct libc::msghdr\">msghdr</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::msghdr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.cmsghdr.html\" title=\"struct libc::cmsghdr\">cmsghdr</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::cmsghdr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.termios.html\" title=\"struct libc::termios\">termios</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::termios"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.mallinfo.html\" title=\"struct libc::mallinfo\">mallinfo</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::mallinfo"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.nlmsghdr.html\" title=\"struct libc::nlmsghdr\">nlmsghdr</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::nlmsghdr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.nlmsgerr.html\" title=\"struct libc::nlmsgerr\">nlmsgerr</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::nlmsgerr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.nl_pktinfo.html\" title=\"struct libc::nl_pktinfo\">nl_pktinfo</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::nl_pktinfo"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.nl_mmap_req.html\" title=\"struct libc::nl_mmap_req\">nl_mmap_req</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::nl_mmap_req"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.nl_mmap_hdr.html\" title=\"struct libc::nl_mmap_hdr\">nl_mmap_hdr</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::nl_mmap_hdr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.nlattr.html\" title=\"struct libc::nlattr\">nlattr</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::nlattr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.rtentry.html\" title=\"struct libc::rtentry\">rtentry</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::rtentry"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.timex.html\" title=\"struct libc::timex\">timex</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::timex"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.ntptimeval.html\" title=\"struct libc::ntptimeval\">ntptimeval</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::ntptimeval"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.regex_t.html\" title=\"struct libc::regex_t\">regex_t</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::regex_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.utmpx.html\" title=\"struct libc::utmpx\">utmpx</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::utmpx"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.stat.html\" title=\"struct libc::stat\">stat</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::b32::stat"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.statvfs.html\" title=\"struct libc::statvfs\">statvfs</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::b32::statvfs"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.pthread_attr_t.html\" title=\"struct libc::pthread_attr_t\">pthread_attr_t</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::b32::pthread_attr_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.sigset_t.html\" title=\"struct libc::sigset_t\">sigset_t</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::b32::sigset_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.sysinfo.html\" title=\"struct libc::sysinfo\">sysinfo</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::b32::sysinfo"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.sigaction.html\" title=\"struct libc::sigaction\">sigaction</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::b32::arm::sigaction"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.statfs.html\" title=\"struct libc::statfs\">statfs</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::b32::arm::statfs"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.flock.html\" title=\"struct libc::flock\">flock</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::b32::arm::flock"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.flock64.html\" title=\"struct libc::flock64\">flock64</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::b32::arm::flock64"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.ipc_perm.html\" title=\"struct libc::ipc_perm\">ipc_perm</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::b32::arm::ipc_perm"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.stat64.html\" title=\"struct libc::stat64\">stat64</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::b32::arm::stat64"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.statfs64.html\" title=\"struct libc::statfs64\">statfs64</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::b32::arm::statfs64"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.statvfs64.html\" title=\"struct libc::statvfs64\">statvfs64</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::b32::arm::statvfs64"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.shmid_ds.html\" title=\"struct libc::shmid_ds\">shmid_ds</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::b32::arm::shmid_ds"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.msqid_ds.html\" title=\"struct libc::msqid_ds\">msqid_ds</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::b32::arm::msqid_ds"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.termios2.html\" title=\"struct libc::termios2\">termios2</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::b32::arm::termios2"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.siginfo_t.html\" title=\"struct libc::siginfo_t\">siginfo_t</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::b32::arm::siginfo_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.stack_t.html\" title=\"struct libc::stack_t\">stack_t</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::b32::arm::stack_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.max_align_t.html\" title=\"struct libc::max_align_t\">max_align_t</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::b32::arm::align::max_align_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.sem_t.html\" title=\"struct libc::sem_t\">sem_t</a>","synthetic":true,"types":["libc::unix::linux_like::linux::gnu::align::sem_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.pthread_mutexattr_t.html\" title=\"struct libc::pthread_mutexattr_t\">pthread_mutexattr_t</a>","synthetic":true,"types":["libc::unix::linux_like::linux::pthread_mutexattr_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.pthread_rwlockattr_t.html\" title=\"struct libc::pthread_rwlockattr_t\">pthread_rwlockattr_t</a>","synthetic":true,"types":["libc::unix::linux_like::linux::pthread_rwlockattr_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.pthread_condattr_t.html\" title=\"struct libc::pthread_condattr_t\">pthread_condattr_t</a>","synthetic":true,"types":["libc::unix::linux_like::linux::pthread_condattr_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.fanotify_event_metadata.html\" title=\"struct libc::fanotify_event_metadata\">fanotify_event_metadata</a>","synthetic":true,"types":["libc::unix::linux_like::linux::fanotify_event_metadata"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.pthread_cond_t.html\" title=\"struct libc::pthread_cond_t\">pthread_cond_t</a>","synthetic":true,"types":["libc::unix::linux_like::linux::pthread_cond_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.pthread_mutex_t.html\" title=\"struct libc::pthread_mutex_t\">pthread_mutex_t</a>","synthetic":true,"types":["libc::unix::linux_like::linux::pthread_mutex_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.pthread_rwlock_t.html\" title=\"struct libc::pthread_rwlock_t\">pthread_rwlock_t</a>","synthetic":true,"types":["libc::unix::linux_like::linux::pthread_rwlock_t"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libc/struct.in6_addr.html\" title=\"struct libc::in6_addr\">in6_addr</a>","synthetic":true,"types":["libc::unix::align::in6_addr"]},{"text":"impl Freeze for <a class=\"enum\" href=\"libc/enum.DIR.html\" title=\"enum libc::DIR\">DIR</a>","synthetic":true,"types":["libc::unix::DIR"]},{"text":"impl Freeze for <a class=\"enum\" href=\"libc/enum.FILE.html\" title=\"enum libc::FILE\">FILE</a>","synthetic":true,"types":["libc::unix::FILE"]},{"text":"impl Freeze for <a class=\"enum\" href=\"libc/enum.fpos_t.html\" title=\"enum libc::fpos_t\">fpos_t</a>","synthetic":true,"types":["libc::unix::fpos_t"]},{"text":"impl Freeze for <a class=\"enum\" href=\"libc/enum.timezone.html\" title=\"enum libc::timezone\">timezone</a>","synthetic":true,"types":["libc::unix::linux_like::timezone"]},{"text":"impl Freeze for <a class=\"enum\" href=\"libc/enum.fpos64_t.html\" title=\"enum libc::fpos64_t\">fpos64_t</a>","synthetic":true,"types":["libc::unix::linux_like::linux::fpos64_t"]}];
implementors["log"] = [{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"log/struct.Record.html\" title=\"struct log::Record\">Record</a>&lt;'a&gt;","synthetic":true,"types":["log::Record"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"log/struct.RecordBuilder.html\" title=\"struct log::RecordBuilder\">RecordBuilder</a>&lt;'a&gt;","synthetic":true,"types":["log::RecordBuilder"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"log/struct.Metadata.html\" title=\"struct log::Metadata\">Metadata</a>&lt;'a&gt;","synthetic":true,"types":["log::Metadata"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"log/struct.MetadataBuilder.html\" title=\"struct log::MetadataBuilder\">MetadataBuilder</a>&lt;'a&gt;","synthetic":true,"types":["log::MetadataBuilder"]},{"text":"impl Freeze for <a class=\"struct\" href=\"log/struct.SetLoggerError.html\" title=\"struct log::SetLoggerError\">SetLoggerError</a>","synthetic":true,"types":["log::SetLoggerError"]},{"text":"impl Freeze for <a class=\"struct\" href=\"log/struct.ParseLevelError.html\" title=\"struct log::ParseLevelError\">ParseLevelError</a>","synthetic":true,"types":["log::ParseLevelError"]},{"text":"impl Freeze for <a class=\"enum\" href=\"log/enum.Level.html\" title=\"enum log::Level\">Level</a>","synthetic":true,"types":["log::Level"]},{"text":"impl Freeze for <a class=\"enum\" href=\"log/enum.LevelFilter.html\" title=\"enum log::LevelFilter\">LevelFilter</a>","synthetic":true,"types":["log::LevelFilter"]},{"text":"impl Freeze for <a class=\"struct\" href=\"log/kv/struct.Error.html\" title=\"struct log::kv::Error\">Error</a>","synthetic":true,"types":["log::kv::error::Error"]},{"text":"impl&lt;'k&gt; Freeze for <a class=\"struct\" href=\"log/kv/struct.Key.html\" title=\"struct log::kv::Key\">Key</a>&lt;'k&gt;","synthetic":true,"types":["log::kv::key::Key"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"log/kv/value/struct.Slot.html\" title=\"struct log::kv::value::Slot\">Slot</a>&lt;'a&gt;","synthetic":true,"types":["log::kv::value::Slot"]},{"text":"impl&lt;'v&gt; Freeze for <a class=\"struct\" href=\"log/kv/value/struct.Value.html\" title=\"struct log::kv::value::Value\">Value</a>&lt;'v&gt;","synthetic":true,"types":["log::kv::value::Value"]}];
implementors["memchr"] = [{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"memchr/struct.Memchr.html\" title=\"struct memchr::Memchr\">Memchr</a>&lt;'a&gt;","synthetic":true,"types":["memchr::iter::Memchr"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"memchr/struct.Memchr2.html\" title=\"struct memchr::Memchr2\">Memchr2</a>&lt;'a&gt;","synthetic":true,"types":["memchr::iter::Memchr2"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"memchr/struct.Memchr3.html\" title=\"struct memchr::Memchr3\">Memchr3</a>&lt;'a&gt;","synthetic":true,"types":["memchr::iter::Memchr3"]}];
implementors["once_cell"] = [{"text":"impl&lt;T&gt; !Freeze for <a class=\"struct\" href=\"once_cell/unsync/struct.OnceCell.html\" title=\"struct once_cell::unsync::OnceCell\">OnceCell</a>&lt;T&gt;","synthetic":true,"types":["once_cell::unsync::OnceCell"]},{"text":"impl&lt;T, F&nbsp;=&nbsp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.fn.html\">fn</a>() -&gt; T&gt; !Freeze for <a class=\"struct\" href=\"once_cell/unsync/struct.Lazy.html\" title=\"struct once_cell::unsync::Lazy\">Lazy</a>&lt;T, F&gt;","synthetic":true,"types":["once_cell::unsync::Lazy"]},{"text":"impl&lt;T&gt; !Freeze for <a class=\"struct\" href=\"once_cell/sync/struct.OnceCell.html\" title=\"struct once_cell::sync::OnceCell\">OnceCell</a>&lt;T&gt;","synthetic":true,"types":["once_cell::sync::OnceCell"]},{"text":"impl&lt;T, F&nbsp;=&nbsp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.fn.html\">fn</a>() -&gt; T&gt; !Freeze for <a class=\"struct\" href=\"once_cell/sync/struct.Lazy.html\" title=\"struct once_cell::sync::Lazy\">Lazy</a>&lt;T, F&gt;","synthetic":true,"types":["once_cell::sync::Lazy"]}];
implementors["pca9685_lib"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"pca9685_lib/struct.PCA9685.html\" title=\"struct pca9685_lib::PCA9685\">PCA9685</a>","synthetic":true,"types":["pca9685_lib::PCA9685"]}];
implementors["piper"] = [{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"piper/struct.Arc.html\" title=\"struct piper::Arc\">Arc</a>&lt;T&gt;","synthetic":true,"types":["piper::arc::Arc"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"piper/struct.Receiver.html\" title=\"struct piper::Receiver\">Receiver</a>&lt;T&gt;","synthetic":true,"types":["piper::chan::Receiver"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"piper/struct.Sender.html\" title=\"struct piper::Sender\">Sender</a>&lt;T&gt;","synthetic":true,"types":["piper::chan::Sender"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"piper/struct.Event.html\" title=\"struct piper::Event\">Event</a>","synthetic":true,"types":["piper::event::Event"]},{"text":"impl Freeze for <a class=\"struct\" href=\"piper/struct.EventListener.html\" title=\"struct piper::EventListener\">EventListener</a>","synthetic":true,"types":["piper::event::EventListener"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"piper/struct.Lock.html\" title=\"struct piper::Lock\">Lock</a>&lt;T&gt;","synthetic":true,"types":["piper::lock::Lock"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"piper/struct.LockGuard.html\" title=\"struct piper::LockGuard\">LockGuard</a>&lt;T&gt;","synthetic":true,"types":["piper::lock::LockGuard"]},{"text":"impl&lt;T&gt; !Freeze for <a class=\"struct\" href=\"piper/struct.Mutex.html\" title=\"struct piper::Mutex\">Mutex</a>&lt;T&gt;","synthetic":true,"types":["piper::mutex::Mutex"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"piper/struct.MutexGuard.html\" title=\"struct piper::MutexGuard\">MutexGuard</a>&lt;'a, T&gt;","synthetic":true,"types":["piper::mutex::MutexGuard"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"piper/struct.Reader.html\" title=\"struct piper::Reader\">Reader</a>","synthetic":true,"types":["piper::pipe::Reader"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"piper/struct.Writer.html\" title=\"struct piper::Writer\">Writer</a>","synthetic":true,"types":["piper::pipe::Writer"]}];
implementors["rppal"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"rppal/gpio/struct.InputPin.html\" title=\"struct rppal::gpio::InputPin\">InputPin</a>","synthetic":true,"types":["rppal::gpio::pin::InputPin"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"rppal/gpio/struct.IoPin.html\" title=\"struct rppal::gpio::IoPin\">IoPin</a>","synthetic":true,"types":["rppal::gpio::pin::IoPin"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"rppal/gpio/struct.OutputPin.html\" title=\"struct rppal::gpio::OutputPin\">OutputPin</a>","synthetic":true,"types":["rppal::gpio::pin::OutputPin"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rppal/gpio/struct.Pin.html\" title=\"struct rppal::gpio::Pin\">Pin</a>","synthetic":true,"types":["rppal::gpio::pin::Pin"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rppal/gpio/struct.Gpio.html\" title=\"struct rppal::gpio::Gpio\">Gpio</a>","synthetic":true,"types":["rppal::gpio::Gpio"]},{"text":"impl Freeze for <a class=\"enum\" href=\"rppal/gpio/enum.Error.html\" title=\"enum rppal::gpio::Error\">Error</a>","synthetic":true,"types":["rppal::gpio::Error"]},{"text":"impl Freeze for <a class=\"enum\" href=\"rppal/gpio/enum.Mode.html\" title=\"enum rppal::gpio::Mode\">Mode</a>","synthetic":true,"types":["rppal::gpio::Mode"]},{"text":"impl Freeze for <a class=\"enum\" href=\"rppal/gpio/enum.Level.html\" title=\"enum rppal::gpio::Level\">Level</a>","synthetic":true,"types":["rppal::gpio::Level"]},{"text":"impl Freeze for <a class=\"enum\" href=\"rppal/gpio/enum.PullUpDown.html\" title=\"enum rppal::gpio::PullUpDown\">PullUpDown</a>","synthetic":true,"types":["rppal::gpio::PullUpDown"]},{"text":"impl Freeze for <a class=\"enum\" href=\"rppal/gpio/enum.Trigger.html\" title=\"enum rppal::gpio::Trigger\">Trigger</a>","synthetic":true,"types":["rppal::gpio::Trigger"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rppal/i2c/struct.Capabilities.html\" title=\"struct rppal::i2c::Capabilities\">Capabilities</a>","synthetic":true,"types":["rppal::i2c::ioctl::Capabilities"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rppal/i2c/struct.I2c.html\" title=\"struct rppal::i2c::I2c\">I2c</a>","synthetic":true,"types":["rppal::i2c::I2c"]},{"text":"impl Freeze for <a class=\"enum\" href=\"rppal/i2c/enum.Error.html\" title=\"enum rppal::i2c::Error\">Error</a>","synthetic":true,"types":["rppal::i2c::Error"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rppal/pwm/struct.Pwm.html\" title=\"struct rppal::pwm::Pwm\">Pwm</a>","synthetic":true,"types":["rppal::pwm::Pwm"]},{"text":"impl Freeze for <a class=\"enum\" href=\"rppal/pwm/enum.Error.html\" title=\"enum rppal::pwm::Error\">Error</a>","synthetic":true,"types":["rppal::pwm::Error"]},{"text":"impl Freeze for <a class=\"enum\" href=\"rppal/pwm/enum.Channel.html\" title=\"enum rppal::pwm::Channel\">Channel</a>","synthetic":true,"types":["rppal::pwm::Channel"]},{"text":"impl Freeze for <a class=\"enum\" href=\"rppal/pwm/enum.Polarity.html\" title=\"enum rppal::pwm::Polarity\">Polarity</a>","synthetic":true,"types":["rppal::pwm::Polarity"]},{"text":"impl&lt;'a, 'b&gt; Freeze for <a class=\"struct\" href=\"rppal/spi/struct.Segment.html\" title=\"struct rppal::spi::Segment\">Segment</a>&lt;'a, 'b&gt;","synthetic":true,"types":["rppal::spi::segment::Segment"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rppal/spi/struct.Spi.html\" title=\"struct rppal::spi::Spi\">Spi</a>","synthetic":true,"types":["rppal::spi::Spi"]},{"text":"impl Freeze for <a class=\"enum\" href=\"rppal/spi/enum.Error.html\" title=\"enum rppal::spi::Error\">Error</a>","synthetic":true,"types":["rppal::spi::Error"]},{"text":"impl Freeze for <a class=\"enum\" href=\"rppal/spi/enum.Bus.html\" title=\"enum rppal::spi::Bus\">Bus</a>","synthetic":true,"types":["rppal::spi::Bus"]},{"text":"impl Freeze for <a class=\"enum\" href=\"rppal/spi/enum.SlaveSelect.html\" title=\"enum rppal::spi::SlaveSelect\">SlaveSelect</a>","synthetic":true,"types":["rppal::spi::SlaveSelect"]},{"text":"impl Freeze for <a class=\"enum\" href=\"rppal/spi/enum.Polarity.html\" title=\"enum rppal::spi::Polarity\">Polarity</a>","synthetic":true,"types":["rppal::spi::Polarity"]},{"text":"impl Freeze for <a class=\"enum\" href=\"rppal/spi/enum.Mode.html\" title=\"enum rppal::spi::Mode\">Mode</a>","synthetic":true,"types":["rppal::spi::Mode"]},{"text":"impl Freeze for <a class=\"enum\" href=\"rppal/spi/enum.BitOrder.html\" title=\"enum rppal::spi::BitOrder\">BitOrder</a>","synthetic":true,"types":["rppal::spi::BitOrder"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rppal/system/struct.DeviceInfo.html\" title=\"struct rppal::system::DeviceInfo\">DeviceInfo</a>","synthetic":true,"types":["rppal::system::DeviceInfo"]},{"text":"impl Freeze for <a class=\"enum\" href=\"rppal/system/enum.Error.html\" title=\"enum rppal::system::Error\">Error</a>","synthetic":true,"types":["rppal::system::Error"]},{"text":"impl Freeze for <a class=\"enum\" href=\"rppal/system/enum.Model.html\" title=\"enum rppal::system::Model\">Model</a>","synthetic":true,"types":["rppal::system::Model"]},{"text":"impl Freeze for <a class=\"enum\" href=\"rppal/system/enum.SoC.html\" title=\"enum rppal::system::SoC\">SoC</a>","synthetic":true,"types":["rppal::system::SoC"]},{"text":"impl Freeze for <a class=\"struct\" href=\"rppal/uart/struct.Status.html\" title=\"struct rppal::uart::Status\">Status</a>","synthetic":true,"types":["rppal::uart::Status"]},{"text":"impl !Freeze for <a class=\"struct\" href=\"rppal/uart/struct.Uart.html\" title=\"struct rppal::uart::Uart\">Uart</a>","synthetic":true,"types":["rppal::uart::Uart"]},{"text":"impl Freeze for <a class=\"enum\" href=\"rppal/uart/enum.Error.html\" title=\"enum rppal::uart::Error\">Error</a>","synthetic":true,"types":["rppal::uart::Error"]},{"text":"impl Freeze for <a class=\"enum\" href=\"rppal/uart/enum.Parity.html\" title=\"enum rppal::uart::Parity\">Parity</a>","synthetic":true,"types":["rppal::uart::Parity"]},{"text":"impl Freeze for <a class=\"enum\" href=\"rppal/uart/enum.ParityCheck.html\" title=\"enum rppal::uart::ParityCheck\">ParityCheck</a>","synthetic":true,"types":["rppal::uart::ParityCheck"]},{"text":"impl Freeze for <a class=\"enum\" href=\"rppal/uart/enum.Queue.html\" title=\"enum rppal::uart::Queue\">Queue</a>","synthetic":true,"types":["rppal::uart::Queue"]}];
implementors["scoped_tls_hkt"] = [{"text":"impl&lt;T:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"scoped_tls_hkt/struct.ScopedKey.html\" title=\"struct scoped_tls_hkt::ScopedKey\">ScopedKey</a>&lt;T&gt;","synthetic":true,"types":["scoped_tls_hkt::ScopedKey"]},{"text":"impl&lt;T:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"scoped_tls_hkt/struct.ScopedKeyMut.html\" title=\"struct scoped_tls_hkt::ScopedKeyMut\">ScopedKeyMut</a>&lt;T&gt;","synthetic":true,"types":["scoped_tls_hkt::ScopedKeyMut"]}];
implementors["scopeguard"] = [{"text":"impl&lt;T, F, S&gt; Freeze for <a class=\"struct\" href=\"scopeguard/struct.ScopeGuard.html\" title=\"struct scopeguard::ScopeGuard\">ScopeGuard</a>&lt;T, F, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["scopeguard::ScopeGuard"]},{"text":"impl Freeze for <a class=\"enum\" href=\"scopeguard/enum.Always.html\" title=\"enum scopeguard::Always\">Always</a>","synthetic":true,"types":["scopeguard::Always"]}];
implementors["slab"] = [{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"slab/struct.Slab.html\" title=\"struct slab::Slab\">Slab</a>&lt;T&gt;","synthetic":true,"types":["slab::Slab"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"slab/struct.VacantEntry.html\" title=\"struct slab::VacantEntry\">VacantEntry</a>&lt;'a, T&gt;","synthetic":true,"types":["slab::VacantEntry"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"slab/struct.Iter.html\" title=\"struct slab::Iter\">Iter</a>&lt;'a, T&gt;","synthetic":true,"types":["slab::Iter"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"slab/struct.IterMut.html\" title=\"struct slab::IterMut\">IterMut</a>&lt;'a, T&gt;","synthetic":true,"types":["slab::IterMut"]},{"text":"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"slab/struct.Drain.html\" title=\"struct slab::Drain\">Drain</a>&lt;'a, T&gt;","synthetic":true,"types":["slab::Drain"]}];
implementors["smol"] = [{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"smol/struct.Async.html\" title=\"struct smol::Async\">Async</a>&lt;T&gt;","synthetic":true,"types":["smol::async_io::Async"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"smol/struct.Task.html\" title=\"struct smol::Task\">Task</a>&lt;T&gt;","synthetic":true,"types":["smol::task::Task"]},{"text":"impl Freeze for <a class=\"struct\" href=\"smol/struct.Timer.html\" title=\"struct smol::Timer\">Timer</a>","synthetic":true,"types":["smol::timer::Timer"]}];
implementors["socket2"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"socket2/struct.SockAddr.html\" title=\"struct socket2::SockAddr\">SockAddr</a>","synthetic":true,"types":["socket2::sockaddr::SockAddr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"socket2/struct.Socket.html\" title=\"struct socket2::Socket\">Socket</a>","synthetic":true,"types":["socket2::socket::Socket"]},{"text":"impl Freeze for <a class=\"struct\" href=\"socket2/struct.Domain.html\" title=\"struct socket2::Domain\">Domain</a>","synthetic":true,"types":["socket2::Domain"]},{"text":"impl Freeze for <a class=\"struct\" href=\"socket2/struct.Type.html\" title=\"struct socket2::Type\">Type</a>","synthetic":true,"types":["socket2::Type"]},{"text":"impl Freeze for <a class=\"struct\" href=\"socket2/struct.Protocol.html\" title=\"struct socket2::Protocol\">Protocol</a>","synthetic":true,"types":["socket2::Protocol"]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()