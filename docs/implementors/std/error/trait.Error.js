(function() {var implementors = {};
implementors["async_std"] = [{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/error/trait.Error.html\" title=\"trait std::error::Error\">Error</a> for <a class=\"struct\" href=\"async_std/task/struct.AccessError.html\" title=\"struct async_std::task::AccessError\">AccessError</a>","synthetic":false,"types":["async_std::task::task_local::AccessError"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/error/trait.Error.html\" title=\"trait std::error::Error\">Error</a> for <a class=\"struct\" href=\"async_std/future/struct.TimeoutError.html\" title=\"struct async_std::future::TimeoutError\">TimeoutError</a>","synthetic":false,"types":["async_std::future::timeout::TimeoutError"]}];
implementors["futures_task"] = [{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/error/trait.Error.html\" title=\"trait std::error::Error\">Error</a> for <a class=\"struct\" href=\"futures_task/struct.SpawnError.html\" title=\"struct futures_task::SpawnError\">SpawnError</a>","synthetic":false,"types":["futures_task::spawn::SpawnError"]}];
implementors["futures_util"] = [{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/error/trait.Error.html\" title=\"trait std::error::Error\">Error</a> for <a class=\"struct\" href=\"futures_util/future/struct.Aborted.html\" title=\"struct futures_util::future::Aborted\">Aborted</a>","synthetic":false,"types":["futures_util::future::abortable::Aborted"]},{"text":"impl&lt;T:&nbsp;<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/any/trait.Any.html\" title=\"trait core::any::Any\">Any</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/error/trait.Error.html\" title=\"trait std::error::Error\">Error</a> for <a class=\"struct\" href=\"futures_util/io/struct.ReuniteError.html\" title=\"struct futures_util::io::ReuniteError\">ReuniteError</a>&lt;T&gt;","synthetic":false,"types":["futures_util::io::split::ReuniteError"]}];
implementors["rppal"] = [{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/error/trait.Error.html\" title=\"trait std::error::Error\">Error</a> for <a class=\"enum\" href=\"rppal/gpio/enum.Error.html\" title=\"enum rppal::gpio::Error\">Error</a>","synthetic":false,"types":["rppal::gpio::Error"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/error/trait.Error.html\" title=\"trait std::error::Error\">Error</a> for <a class=\"enum\" href=\"rppal/i2c/enum.Error.html\" title=\"enum rppal::i2c::Error\">Error</a>","synthetic":false,"types":["rppal::i2c::Error"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/error/trait.Error.html\" title=\"trait std::error::Error\">Error</a> for <a class=\"enum\" href=\"rppal/pwm/enum.Error.html\" title=\"enum rppal::pwm::Error\">Error</a>","synthetic":false,"types":["rppal::pwm::Error"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/error/trait.Error.html\" title=\"trait std::error::Error\">Error</a> for <a class=\"enum\" href=\"rppal/spi/enum.Error.html\" title=\"enum rppal::spi::Error\">Error</a>","synthetic":false,"types":["rppal::spi::Error"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/error/trait.Error.html\" title=\"trait std::error::Error\">Error</a> for <a class=\"enum\" href=\"rppal/system/enum.Error.html\" title=\"enum rppal::system::Error\">Error</a>","synthetic":false,"types":["rppal::system::Error"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/error/trait.Error.html\" title=\"trait std::error::Error\">Error</a> for <a class=\"enum\" href=\"rppal/uart/enum.Error.html\" title=\"enum rppal::uart::Error\">Error</a>","synthetic":false,"types":["rppal::uart::Error"]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()